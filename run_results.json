{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.10", "generated_at": "2024-10-23T16:57:06.792169Z", "invocation_id": "d47805c6-d4d7-48fb-a293-fbb3cfe617e2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.473739Z", "completed_at": "2024-10-23T16:56:25.481187Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.482362Z", "completed_at": "2024-10-23T16:56:25.482376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010812044143676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.multiple_agg_per_cp", "compiled": true, "compiled_code": "-- Les departements et les r\u00e9gions sont donn\u00e9es par commune\n-- Il existe plusieurs codes postaux pour une commune et plusieurs communes pour un code postal\n-- Il convient de v\u00e9rifier que pour un code postal donn\u00e9, apr\u00e8s fusion avec la table communes,\n-- Il n'y a pas qu'un seul arrondissement, un seul d\u00e9partement et une seule r\u00e9gion\nwith merged_data as (\n    select\n        LPAD(CAST(cp.code_postal AS TEXT), 5, '0') as code_postal,\n        -- cc.\"ARR\" as code_arrondissement,\n        cc.departement as code_departement,\n        cc.region as code_region\n    from \"defaultdb\".\"sources\".\"cog_poste\" cp\n    inner join \"defaultdb\".\"sources\".\"cog_communes\" cc on cp.code_commune_insee = cc.\"COM\" and cc.\"TYPECOM\" = 'COM'\n    -- Remplacer par left join \u00e0 l'inclusions des territoire d'outre mer TOM \n    -- Puisque les codes communes ne sont pas renseign\u00e9s pour ces territoires dans codes_geographiques_communes\n    -- La R\u00e9union est une region d'outre, mais pas un territoire d'outre mer, d\u00e8s lors elle est incluse dans les codes_geographiques_communes\n),\n\ncounts as (\n    select \n        code_postal,\n        --count(distinct code_arrondissement) as num_arr,\n        count(distinct code_departement) as num_dep,\n        count(distinct code_region) as num_reg\n    from merged_data\n    group by code_postal\n)\n\nselect *\nfrom counts\nwhere num_dep > 1 or num_reg > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.485853Z", "completed_at": "2024-10-23T16:56:25.488578Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.489719Z", "completed_at": "2024-10-23T16:56:25.489726Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0059816837310791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.multiple_com_per_cp", "compiled": true, "compiled_code": "--- Montre les codes postaux qui ont plusieurs codes communes\n\nSELECT code_postal, ARRAY_AGG(DISTINCT code_commune_insee) as communes\nFROM \"defaultdb\".\"sources\".\"cog_poste\" \nGROUP BY code_postal\nHAVING COUNT(DISTINCT code_commune_insee) > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.493127Z", "completed_at": "2024-10-23T16:56:25.495818Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.496942Z", "completed_at": "2024-10-23T16:56:25.496949Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005952358245849609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.multiple_cp_per_com", "compiled": true, "compiled_code": "--- Montre les communes qui ont plusieurs codes postaux\n\nSELECT code_commune_insee, ARRAY_AGG(DISTINCT code_postal) as postal_codes\nFROM \"defaultdb\".\"sources\".\"cog_poste\" \nGROUP BY code_commune_insee\nHAVING COUNT(DISTINCT code_postal) > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.500417Z", "completed_at": "2024-10-23T16:56:25.504512Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.505689Z", "completed_at": "2024-10-23T16:56:25.505696Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007464408874511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.fake_knn_data", "compiled": true, "compiled_code": "-- Pour tester la fonction knn, nous devons cr\u00e9er une table avec des donn\u00e9es fictives \n-- (impossible de faire des tests unitaires sur des donn\u00e9es qui ne sont pas dans une table). \n-- cr\u00e9e une fausse table avec id, latitude, longitude, et valeur columns\n-- S'assurer que le calcul ne se fait pas sur l'objet de la table\n\n\nWITH fake_knn_table AS (\n    SELECT 1 AS id, ST_SetSRID(ST_MakePoint(43.7, 3.832), 4326) AS geopoint, 100 AS valeur, '2024' AS millesime, '123' AS code_arrondissement UNION ALL -- (3, 2) --> (200 + 300) / 2 = 250\n    SELECT 3,       ST_SetSRID(ST_MakePoint(43.7, 3.830), 4326),             200,           '2024'             , '123'                        UNION ALL -- (1, 2) --> (100 + 300) / 2 = 200\n    SELECT 2,       ST_SetSRID(ST_MakePoint(43.7, 3.831), 4326),             300,           '2024'             , '123'                        UNION ALL -- (1, 3) --> (100 + 200) / 2 = 150\n    SELECT 4,       ST_SetSRID(ST_MakePoint(43.7, 3.839), 4326),             400,           '2024'             , '123'                        UNION ALL -- (6, 1) --> (500 + 100) / 2 = 300\n    SELECT 6,       ST_SetSRID(ST_MakePoint(43.7, 3.838), 4326),             500,           '2024'             , '123'                                  -- (4, 1) --> (400 + 100) / 2 = 250\n)\n\n\nselect * from fake_knn_table", "relation_name": "\"defaultdb\".\"simulations\".\"fake_knn_data\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.509158Z", "completed_at": "2024-10-23T16:56:25.567145Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.568298Z", "completed_at": "2024-10-23T16:56:25.568306Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06132650375366211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.infos_communes", "compiled": true, "compiled_code": "\n\nwith filtre_cog_communes as (\n    -- Filter out non-commune rows here to avoid confusion of filtering in the main query\n    select * \n    from \"defaultdb\".\"sources\".\"cog_communes\" as cog_communes     \n    where cog_communes.type in ('commune-actuelle', 'arrondissement-municipal')\n\n),denomalise_cog as (\n    select\n        LPAD(CAST(filtre_cog_communes.code as TEXT), 5, '0') as code_commune,\n        filtre_cog_communes.nom as nom_commune,\n        filtre_cog_communes.arrondissement as code_arrondissement,\n        filtre_cog_communes.departement as code_departement,\n        filtre_cog_communes.region as code_region,\n        \"codesPostaux\" as codes_postaux,\n        filtre_cog_communes.population as population,\n        filtre_cog_communes.zone as code_zone,\n        \n        cog_arrondissements.nom as nom_arrondissement,\n        cog_departements.nom as nom_departement,\n        cog_regions.nom as nom_region\n\n    from filtre_cog_communes\n    left join \"defaultdb\".\"sources\".\"cog_arrondissements\"  cog_arrondissements on cog_arrondissements.code = filtre_cog_communes.arrondissement\n    left join \"defaultdb\".\"sources\".\"cog_departements\"  cog_departements on cog_departements.code = filtre_cog_communes.departement\n    left join \"defaultdb\".\"sources\".\"cog_regions\"  cog_regions on cog_regions.code = filtre_cog_communes.region  \n    \n), laposte_gps as (\n    select DISTINCT\n        LPAD(CAST(cog_poste.code_commune_insee AS TEXT), 5, '0') as code_commune,\n        CAST(SPLIT_PART(cog_poste._geopoint, ',', 1) AS FLOAT) as commune_latitude,\n        CAST(SPLIT_PART(cog_poste._geopoint, ',', 2) AS FLOAT) as commune_longitude\n    from \"defaultdb\".\"sources\".\"cog_poste\"  as cog_poste\n), ign_shapes as (\n    select \"INSEE_COM\" as code_commune,\n            geometry as commune_contour \n    from \"defaultdb\".\"sources\".\"shape_commune_2024\"\n    union\n    select  \"INSEE_ARM\" as code_commune,\n            geometry as commune_contour\n    from \"defaultdb\".\"sources\".\"shape_arrondissement_municipal_2024\"\n)\n\nselect\n    denomalise_cog.*,\n    laposte_gps.commune_latitude,\n    laposte_gps.commune_longitude,\n    ST_SetSRID(ST_MakePoint(laposte_gps.commune_latitude, laposte_gps.commune_longitude), 4326) as commune_centre_geopoint,\n    ign_shapes.commune_contour\nfrom denomalise_cog\nleft join laposte_gps on denomalise_cog.code_commune = laposte_gps.code_commune\nleft join ign_shapes on denomalise_cog.code_commune = ign_shapes.code_commune", "relation_name": "\"defaultdb\".\"prepare\".\"infos_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.572104Z", "completed_at": "2024-10-23T16:56:25.575833Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.576991Z", "completed_at": "2024-10-23T16:56:25.576997Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0072290897369384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.infos_postes", "compiled": true, "compiled_code": "\n\nwith format_cog_poste as (\n    select DISTINCT\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        CASE \n\n            WHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') for 3) IN ('200', '201') THEN '2A'\n            WHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') FROM 1 FOR 2) = '20' THEN '2B'\n            WHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') FROM 1 FOR 5) = '97133' THEN '977' -- Saint Barthelemy, code postal 97133, code dept insee 977\n\t\t\tWHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') FROM 1 FOR 5) = '97150' THEN '978' -- Saint Martin, code postal 97150, code dept insee 978\n\t\t\tWHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') FROM 1 FOR 5) = '98799' THEN '989' -- \u00cele de Clipperton, code postal 97150, code dept insee 978\n\t\t\tWHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') for 2) IN ('97', '98') THEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') for 3)\n            \n            ELSE SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') for 2)\n        \n        END as code_departement\n    from \"defaultdb\".\"sources\".\"cog_poste\" as cog_poste\n),\n\njoin_departements as (\n    select \n        format_cog_poste.*,\n        cog_departements.nom as nom_departement,\n        cog_departements.region as code_region\n    from format_cog_poste\n    left join \"defaultdb\".\"sources\".\"cog_departements\" cog_departements on format_cog_poste.code_departement = cog_departements.code\n),\n\njoin_regions as (\n    select \n        join_departements.*,\n        cog_regions.nom as nom_region\n    from join_departements\n    left join \"defaultdb\".\"sources\".\"cog_regions\" cog_regions on join_departements.code_region = cog_regions.code\n)\n\nselect *\nfrom join_regions", "relation_name": "\"defaultdb\".\"prepare\".\"infos_postes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.580468Z", "completed_at": "2024-10-23T16:56:25.583634Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.584757Z", "completed_at": "2024-10-23T16:56:25.584763Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006459236145019531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.postes_communes", "compiled": true, "compiled_code": "\n\nwith unique_codes_communes_postaux as (\n    select DISTINCT\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune_insee\n    from \"defaultdb\".\"sources\".\"cog_poste\" as cog_poste\n)\n\nselect *\nfrom unique_codes_communes_postaux", "relation_name": "\"defaultdb\".\"intermediaires\".\"postes_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.588170Z", "completed_at": "2024-10-23T16:56:25.589512Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.590646Z", "completed_at": "2024-10-23T16:56:25.590652Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004594087600708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.makeopendata.logement_2020_valeurs", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.594221Z", "completed_at": "2024-10-23T16:56:25.597098Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.598215Z", "completed_at": "2024-10-23T16:56:25.598220Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006081581115722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_arr", "compiled": true, "compiled_code": "-- Test qu'il n'ya pas de doublons dans la table des codes g\u00e9ographiques des arrondissements\n\nWITH counts as (\n    select \n        cog_arrondissements.code,\n        count(*) as num_arr\n    from \"defaultdb\".\"sources\".\"cog_arrondissements\"  as cog_arrondissements \n    group by cog_arrondissements.code\n)\n\nselect *\nfrom counts\nwhere num_arr > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.601556Z", "completed_at": "2024-10-23T16:56:25.604300Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.605432Z", "completed_at": "2024-10-23T16:56:25.605436Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005944490432739258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_com", "compiled": true, "compiled_code": "-- Une commune peut avoir plusieurs types\n-- COM\tCommune / COMA\tCommune associ\u00e9e / COMD\tCommune d\u00e9l\u00e9gu\u00e9e / ARM\tArrondissement municipal\n-- Les COM sont celles existantes, les autres types sont des legacy de fusions ou disparitions de communes\n\nWITH counts as (\n    select \n        cog_communes.code,\n        count(*) as num_com\n    from \"defaultdb\".\"sources\".\"cog_communes\"  as cog_communes\n    where cog_communes.type = 'commune-actuelle'\n    group by cog_communes.code\n)\n\nselect *\nfrom counts\nwhere num_com > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.608757Z", "completed_at": "2024-10-23T16:56:25.611528Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.612637Z", "completed_at": "2024-10-23T16:56:25.612641Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005949735641479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_dep", "compiled": true, "compiled_code": "-- Test qu'il n'ya pas de doublons dans la table des codes g\u00e9ographiques des departements\n\nWITH counts as (\n    select \n        cog_departements.code,\n        count(*) as num_dep\n    from \"defaultdb\".\"sources\".\"cog_departements\" as cog_departements\n    group by cog_departements.code\n)\n\nselect *\nfrom counts\nwhere num_dep > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.616159Z", "completed_at": "2024-10-23T16:56:25.619202Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.620344Z", "completed_at": "2024-10-23T16:56:25.620348Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006416797637939453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_gps_com", "compiled": true, "compiled_code": "-- https://www.data.gouv.fr/fr/datasets/base-officielle-des-codes-postaux/\n-- Mention que : contient en plus les coordonn\u00e9es des centro\u00efdes des communes est \u00e9galement disponible.\n-- V\u00e9rifions que les coordonn\u00e9es des centro\u00efdes sont bien uniques pour chaque commune\n\n\n\nwith source as (\n    SELECT code_commune_insee, COUNT(DISTINCT _geopoint) as geopoint_count\n    FROM \"defaultdb\".\"sources\".\"cog_poste\" as cog_poste\n    GROUP BY code_commune_insee\n)\n\nselect *\nfrom source\nwhere geopoint_count > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.623759Z", "completed_at": "2024-10-23T16:56:25.626631Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.627736Z", "completed_at": "2024-10-23T16:56:25.627740Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00606989860534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_price_mutation", "compiled": true, "compiled_code": "-- Dans le fichier source de dvf, les mutations apparaissent sur plusieurs ligne\n-- Il s'agit des transactions multiventes (un appartement dans une ligne et une maison dans une autre)\n-- Il s'agit donc de v\u00e9rifier que chaque mutation, donc dans les lignes o\u00f9 elle apparait, il n'a qu'une seule valeur fonci\u00e8re\n\nWITH mutation_values AS (\n    SELECT \n        id_mutation,\n        code_commune,\n        code_postal,\n        latitude,\n        longitude,\n        valeur_fonciere\n    FROM \n        \"defaultdb\".\"sources\".\"dvf_2023\" as dvf_2023\n),\n\nmutation_value_counts AS (\n    SELECT \n        id_mutation,\n        COUNT(DISTINCT valeur_fonciere) AS distinct_fonciere_count\n    FROM \n        mutation_values\n    GROUP BY \n        id_mutation\n)\n\nSELECT \n    id_mutation,\n    distinct_fonciere_count\nFROM \n    mutation_value_counts\nWHERE \n    distinct_fonciere_count > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.631122Z", "completed_at": "2024-10-23T16:56:25.633877Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.634981Z", "completed_at": "2024-10-23T16:56:25.634985Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0059316158294677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_reg", "compiled": true, "compiled_code": "-- Test qu'il n'ya pas de doublons dans la table des codes g\u00e9ographiques des r\u00e9gions\n\nWITH counts as (\n    select \n        cog_regions.code,\n        count(*) as num_reg\n    from \"defaultdb\".\"sources\".\"cog_regions\" as cog_regions\n    group by cog_regions.code\n)\n\nselect *\nfrom counts\nwhere num_reg > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.638336Z", "completed_at": "2024-10-23T16:56:25.641548Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.642696Z", "completed_at": "2024-10-23T16:56:25.642700Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0064504146575927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.effectif_tout_departement_egal_some_region", "compiled": true, "compiled_code": "-- Teste que l'entr\u00e9e 'Tout d\u00e9partement' dans libelle de departement reporte le total des effectifs de tous les d\u00e9partements\n\n\nWITH sommes_par_departement AS (\n    SELECT \n        annee, \n        profession_sante, \n        libelle_region, \n        SUM(cast(effectif as numeric)) AS effectif_total_calcule\n    FROM \"defaultdb\".\"sources\".\"professionels_sante\"\n    WHERE libelle_departement != 'Tout departement'\n    GROUP BY annee, profession_sante, libelle_region\n),\n\t\ntout_departement AS (\n    SELECT \n        annee, \n        profession_sante, \n        libelle_region, \n        CAST(effectif as numeric) AS tout_departement_effectif\n    FROM \"defaultdb\".\"sources\".\"professionels_sante\"\n    WHERE libelle_departement = 'Tout departement'\n)\n\t\nSELECT \n    sommes_par_departement.effectif_total_calcule, \n    tout_departement.tout_departement_effectif\nFROM sommes_par_departement\nLEFT JOIN tout_departement \n    ON sommes_par_departement.annee = tout_departement.annee \n    AND sommes_par_departement.profession_sante = tout_departement.profession_sante \n    AND sommes_par_departement.libelle_region = tout_departement.libelle_region\nWHERE sommes_par_departement.effectif_total_calcule != tout_departement.tout_departement_effectif", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.646108Z", "completed_at": "2024-10-23T16:56:25.658854Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.660041Z", "completed_at": "2024-10-23T16:56:25.660046Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016093969345092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.source_not_null_sources_filosofi_commune_2021__CODGEO_.7073b9c75b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect \"CODGEO\"\nfrom \"defaultdb\".\"sources\".\"filosofi_commune_2021\"\nwhere \"CODGEO\" is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.663500Z", "completed_at": "2024-10-23T16:56:25.667616Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.668757Z", "completed_at": "2024-10-23T16:56:25.668761Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007381439208984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.source_not_null_sources_filosofi_iris_2021__IRIS_.96aa188bf7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect \"IRIS\"\nfrom \"defaultdb\".\"sources\".\"filosofi_iris_2021\"\nwhere \"IRIS\" is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.672193Z", "completed_at": "2024-10-23T16:56:25.678121Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.679258Z", "completed_at": "2024-10-23T16:56:25.679263Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009150028228759766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.source_unique_sources_filosofi_commune_2021__CODGEO_.bef3b826e4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    \"CODGEO\" as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"sources\".\"filosofi_commune_2021\"\nwhere \"CODGEO\" is not null\ngroup by \"CODGEO\"\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.682712Z", "completed_at": "2024-10-23T16:56:25.686550Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.687677Z", "completed_at": "2024-10-23T16:56:25.687682Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007086753845214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.source_unique_sources_filosofi_iris_2021__IRIS_.d12e654b6c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    \"IRIS\" as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"sources\".\"filosofi_iris_2021\"\nwhere \"IRIS\" is not null\ngroup by \"IRIS\"\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.691122Z", "completed_at": "2024-10-23T16:56:25.694426Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.695543Z", "completed_at": "2024-10-23T16:56:25.695547Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006561994552612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.test_knn", "compiled": true, "compiled_code": "-- depends_on: \"defaultdb\".\"simulations\".\"fake_knn_data\"\n\n-- Define expected values\nWITH expected AS (\n    SELECT 1 AS id, 250 AS expected_valeur UNION ALL\n    SELECT 3,       200 UNION ALL\n    SELECT 2,       150 UNION ALL\n    SELECT 4,       300 UNION ALL\n    SELECT 6,       250\n),\n\n-- Calculate knn for each row in the fake table\ncomputed AS (\n    \nWITH knn AS (\n    SELECT \n        a.id AS id,\n        AVG(b.valeur) AS prix_m2_knn_2\n    FROM \n        \"defaultdb\".\"simulations\".\"fake_knn_data\" a\n        JOIN LATERAL (\n            SELECT valeur\n            FROM \"defaultdb\".\"simulations\".\"fake_knn_data\"\n            WHERE (id != a.id) AND (millesime = a.millesime)\n            ORDER BY a.geopoint <-> geopoint\n            LIMIT 2\n        ) b ON TRUE\n    GROUP BY a.id\n)\n\nSELECT * FROM knn\n\n\n\n)\n\n-- Compare computed and expected values\nSELECT \n    computed.id, \n    computed.prix_m2_knn_2 AS computed_valeur, \n    expected.expected_valeur\nFROM \n    computed\n    JOIN expected ON computed.id = expected.id\nWHERE\n    computed.prix_m2_knn_2 != expected.expected_valeur", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.698999Z", "completed_at": "2024-10-23T16:56:25.703200Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.704323Z", "completed_at": "2024-10-23T16:56:25.704327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007462024688720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.commune_centroid_poste", "compiled": true, "compiled_code": "\n\nWITH coordonnee_moyenne_par_code_postal AS (\n    SELECT \n        cog_poste.code_postal as code_postal,\n        AVG(infos_communes.commune_latitude) AS avg_lat,\n        AVG(infos_communes.commune_longitude) AS avg_lon\n    FROM \"defaultdb\".\"sources\".\"cog_poste\" cog_poste\n    LEFT JOIN \"defaultdb\".\"prepare\".\"infos_communes\" infos_communes \n    ON infos_communes.code_commune = cog_poste.code_commune_insee\n    GROUP BY cog_poste.code_postal\n),\ndistinct_code_postal AS (\n    SELECT DISTINCT \n        code_postal, \n        code_commune_insee\n    FROM \"defaultdb\".\"sources\".\"cog_poste\"\n),\ncog_postal_et_distance_moyenne AS (\n    SELECT \n        distinct_code_postal.*,\n        coordonnee_moyenne_par_code_postal.avg_lat,\n        coordonnee_moyenne_par_code_postal.avg_lon\n    FROM distinct_code_postal\n    LEFT JOIN coordonnee_moyenne_par_code_postal\n    ON distinct_code_postal.code_postal = coordonnee_moyenne_par_code_postal.code_postal\n),\ncode_postal_et_commune_et_distance AS (\n    SELECT \n        cog_postal_et_distance_moyenne.*,\n        infos_communes.*,\n        SQRT(POWER(infos_communes.commune_latitude - cog_postal_et_distance_moyenne.avg_lat, 2) + POWER(infos_communes.commune_longitude - cog_postal_et_distance_moyenne.avg_lon, 2)) AS distance\n    FROM cog_postal_et_distance_moyenne \n    LEFT JOIN \"defaultdb\".\"prepare\".\"infos_communes\" infos_communes\n    ON cog_postal_et_distance_moyenne.code_commune_insee = infos_communes.code_commune\n),\ncode_postal_et_commune_et_rang_distance_centre AS (\n    SELECT \n        *,\n    ROW_NUMBER() OVER (PARTITION BY code_postal ORDER BY distance, population DESC) AS rang_distance_puis_population \n    FROM code_postal_et_commune_et_distance\n),\ncode_postal_et_commune_centrale AS (\n    SELECT \n        code_postal,\n        code_commune as code_commune_centrale,\n        nom_commune as nom_commune_centrale,\n        code_departement,\n        avg_lat as latitude_centrale_code_postal,\n        avg_lon as longitude_centrale_code_postal\n    FROM code_postal_et_commune_et_rang_distance_centre\n    WHERE rang_distance_puis_population = 1\n),\njoin_departements as (\n    select \n        code_postal_et_commune_centrale.*,\n        cog_departements.nom as nom_departement,\n        cog_departements.region as code_region\n    from code_postal_et_commune_centrale\n    left join \"defaultdb\".\"sources\".\"cog_departements\" cog_departements \n    on code_postal_et_commune_centrale.code_departement = cog_departements.code\n),\n\njoin_regions as (\n    select \n        join_departements.*,\n        cog_regions.nom as nom_region\n    from join_departements\n    left join \"defaultdb\".\"sources\".\"cog_regions\" cog_regions \n    on join_departements.code_region = cog_regions.code\n)\n\nselect *\nfrom join_regions", "relation_name": "\"defaultdb\".\"prepare\".\"commune_centroid_poste\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.707717Z", "completed_at": "2024-10-23T16:56:25.710962Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:25.712089Z", "completed_at": "2024-10-23T16:56:25.712093Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006505727767944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.infos_iris", "compiled": true, "compiled_code": "\n\nwith infos_iris as (\n    select \n        \"CODE_IRIS\" as code_iris_2024,\n        \"IRIS\" as suffix_iris_2024,\n        \"NOM_IRIS\" as nom_iris,\n        \"INSEE_COM\" as code_commune_2024,\n        geometry as contour_iris,\n        CASE \n            WHEN \"TYP_IRIS\" = 'A' THEN 'zone_activite'\n            WHEN \"TYP_IRIS\" = 'H' THEN 'zone_habitat'\n            WHEN \"TYP_IRIS\" = 'D' THEN 'zone_divers'\n            WHEN \"TYP_IRIS\" = 'Z' THEN 'zone_non_iris'\n        END\n        as type_iris,\n        ST_PointOnSurface(geometry) as iris_centre_geopoint,\n        ST_X(ST_TRANSFORM(ST_PointOnSurface(geometry), 4674)) AS iris_longitude,\n        ST_Y(ST_TRANSFORM(ST_PointOnSurface(geometry), 4674)) AS iris_latitude\n    from \"defaultdb\".\"sources\".\"shape_iris_2024\" as infos_iris\n\n)\n\nselect \n    infos_iris.*,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region\nfrom infos_iris as infos_iris\nleft join \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = infos_iris.code_commune_2024", "relation_name": "\"defaultdb\".\"prepare\".\"infos_iris\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:25.715659Z", "completed_at": "2024-10-23T16:56:31.295499Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.296707Z", "completed_at": "2024-10-23T16:56:31.296714Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.6789233684539795, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.professionels_sante_departement", "compiled": true, "compiled_code": "\n\nwith aggreger_effectif_sante_unpivot as (\n\tselect \n\t\tregion,\n\t\tlibelle_region,\n\t\tdepartement,\n\t\tlibelle_departement,\n\t\tprofession_sante,\n\t\tsum(cast(effectif as numeric)) as effectif\n\tFROM \"defaultdb\".\"sources\".\"professionels_sante\"\n\twhere (annee = '2022') and (libelle_departement != 'Tout d\u00e9partement')  and (libelle_departement != 'FRANCE')\n\tgroup by region, departement, libelle_region, libelle_departement, profession_sante\n),\naggreger_effectif_sante_departements as (\n\tselect \n\t\tregion,\n\t\tlibelle_region,\n\t\tdepartement,\n\t\tlibelle_departement,\n\t\t\n  \n    sum(\n      \n      case\n      when profession_sante = 'Stomatologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Stomatologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Anesth\u00e9sistes-r\u00e9animateurs'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Anesth\u00e9sistes-r\u00e9animateurs\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Autres m\u00e9decins'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Autres m\u00e9decins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Cardiologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Cardiologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Chirurgiens'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Chirurgiens\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Chirurgiens-dentistes (hors sp\u00e9cialistes d''orthop\u00e9die dento-faciale - ODF)'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Chirurgiens-dentistes (hors sp\u00e9cialistes d'orthop\u00e9die dento-faciale - ODF)\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Chirurgiens-dentistes sp\u00e9cialistes d''orthop\u00e9die dento-faciale (ODF)'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Chirurgiens-dentistes sp\u00e9cialistes d'orthop\u00e9die dento-faciale (ODF)\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Dermatologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Dermatologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Endocrinologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Endocrinologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Ensemble des auxiliaires m\u00e9dicaux'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Ensemble des auxiliaires m\u00e9dicaux\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Ensemble des chirurgiens-dentistes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Ensemble des chirurgiens-dentistes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Ensemble des m\u00e9decins'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Ensemble des m\u00e9decins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Ensemble des m\u00e9decins g\u00e9n\u00e9ralistes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Ensemble des m\u00e9decins g\u00e9n\u00e9ralistes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Ensemble des m\u00e9decins sp\u00e9cialistes (hors g\u00e9n\u00e9ralistes)'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Ensemble des m\u00e9decins sp\u00e9cialistes (hors g\u00e9n\u00e9ralistes)\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Gyn\u00e9cologues m\u00e9dicaux et obst\u00e9triciens'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Gyn\u00e9cologues m\u00e9dicaux et obst\u00e9triciens\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'H\u00e9pato-gastro-ent\u00e9rologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"H\u00e9pato-gastro-ent\u00e9rologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Infirmiers'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Infirmiers\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Masseurs-kin\u00e9sith\u00e9rapeutes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Masseurs-kin\u00e9sith\u00e9rapeutes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'M\u00e9decins g\u00e9n\u00e9ralistes \u00e0 expertise particuli\u00e8re (MEP)'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"M\u00e9decins g\u00e9n\u00e9ralistes \u00e0 expertise particuli\u00e8re (MEP)\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'M\u00e9decins g\u00e9n\u00e9ralistes (hors m\u00e9decins \u00e0 expertise particuli\u00e8re - MEP)'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"M\u00e9decins g\u00e9n\u00e9ralistes (hors m\u00e9decins \u00e0 expertise particuli\u00e8re - MEP)\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'M\u00e9decins nucl\u00e9aires'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"M\u00e9decins nucl\u00e9aires\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'M\u00e9decins pathologistes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"M\u00e9decins pathologistes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Rhumatologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Rhumatologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Sages-femmes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Sages-femmes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'N\u00e9phrologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"N\u00e9phrologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Neurologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Neurologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Ophtalmologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Ophtalmologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Orthophonistes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Orthophonistes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Orthoptistes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Orthoptistes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Oto-rhino-laryngologistes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Oto-rhino-laryngologistes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'P\u00e9diatres'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"P\u00e9diatres\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'P\u00e9dicures-podologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"P\u00e9dicures-podologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Pneumologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Pneumologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Psychiatres'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Psychiatres\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Radiologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Radiologues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Radioth\u00e9rapeutes'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Radioth\u00e9rapeutes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'M\u00e9decins vasculaires'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"M\u00e9decins vasculaires\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when profession_sante = 'Allergologues'\n        then effectif\n      else 0\n      end\n    )\n    \n      \n            as \"Allergologues\"\n      \n    \n    \n  \n\n  \tFROM aggreger_effectif_sante_unpivot\n\tgroup by region, libelle_region, departement, libelle_departement\n),\ninfos_par_departement as (\n\tselect \n\t\tcode_departement,\n\t\tsum(cast(population as numeric)) as population_departement,\n\t\tavg(commune_latitude) as latitude_centre_departement,\n\t\tavg(commune_longitude) as longitude_centre_departement\n\tfrom \"defaultdb\".\"prepare\".\"infos_communes\"\n\tgroup by code_departement\n)\n\nselect \n\taggreger_effectif_sante_departements.*,\n\tinfos_par_departement.population_departement,\n\tinfos_par_departement.latitude_centre_departement,\n\tinfos_par_departement.longitude_centre_departement\nfrom aggreger_effectif_sante_departements\nleft join infos_par_departement \non aggreger_effectif_sante_departements.departement = infos_par_departement.code_departement", "relation_name": "\"defaultdb\".\"prepare\".\"professionels_sante_departement\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.396101Z", "completed_at": "2024-10-23T16:56:31.405752Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.406962Z", "completed_at": "2024-10-23T16:56:31.406968Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013210773468017578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.revenu_commune", "compiled": true, "compiled_code": "\n\nwith filosofi_commune as (\n    select * \n    from \"defaultdb\".\"sources\".\"filosofi_commune_2021\"\n\n),\nrenamed_columns as (\n    select\n        \"CODGEO\" as code_commune_2024,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"NBMENFISC21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as nombre_menages_fiscaux,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"NBPERSMENFISC21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as nombre_personnes,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"MED21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as mediane_niveau_vie_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PIMP21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_menages_fiscaux_imposes_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP6021\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_ensemble_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60AGE121\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_moins_30_ans_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60AGE221\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_30_39_ans_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60AGE321\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_40_49_ans_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60AGE421\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_50_59_ans_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60AGE521\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_60_74_ans_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60AGE621\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_75_ans_ou_plus_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60TOL121\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_proprietaires_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"TP60TOL221\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_pauvrete_locataires_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PACT21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_revenus_activite_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PTSA21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_salaires_traitements_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PCHO21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_indemnites_chomage_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PBEN21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_revenus_activites_non_salariees_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PPEN21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_pensions,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PPAT21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_revenus_patrimoine_autres_revenus_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PPSOC21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_ensemble_prestations_sociales_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PPFAM21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_prestations_familiales_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PPMINI21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_minima_sociaux_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PPLOGT21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_prestations_logement_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"PIMPOT21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_des_impots_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"D121\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_1_niveau_vie_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"D921\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_9_niveau_vie_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"RD21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as rapport_interdecile_9_1\n    from filosofi_commune\n),\naggregated_with_infos_communes as (\n    SELECT\n      *\n    FROM\n      renamed_columns\n    JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes\n    ON\n      renamed_columns.code_commune_2024 = infos_communes.code_commune\n  )\n\nselect * from aggregated_with_infos_communes", "relation_name": "\"defaultdb\".\"prepare\".\"revenu_commune\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.410515Z", "completed_at": "2024-10-23T16:56:31.418333Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.419522Z", "completed_at": "2024-10-23T16:56:31.419526Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011126518249511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.ventes_immobilieres", "compiled": true, "compiled_code": "-- Filtres nature transaction et nature bien :\n-- Il convient aussi de garder que les vente (explure les VEFA et les \u00e9changes)\n-- Et que les transactions qui concernent au moins un appartement et les maisons\n\n-- Filtres sur les surfaces et trautement des pi\u00e8ces :\n-- Il convient de garder que les transactions qui concernent des biens de plus de 9m2 \n-- Le nombre de pi\u00e8ces est souvent mal renseign\u00e9, il convient de le corriger en fonction de la surface\n\n-- Filtres sur les prix :\n-- Il convient de garder que les transactions dont le prix au metre carr\u00e9 n'est pas 50% de plus que ses 10 plus proches voisins\n\n-- Donn\u00e9es par mutation : \n-- Les donn\u00e9es DVF sont initilement pr\u00e9sent\u00e9es sous forme d'une ligne par mutation (transaction)\n-- Une mutation peut concerner plusieurs biens\n-- Le prix est le prix total de la mutation, il apparait sur les biens concern\u00e9s\n\n\n\n\n\n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2014_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2014 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2015_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2015 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2016_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2016 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2017_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2017 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2018_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2018 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2019_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2019 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2020_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2020 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2021_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2021 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2022_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2022 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2023_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2023 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n     union \n\n    select *\n    from (\n\nWITH source_dvf AS (\n    \n        select * from \"defaultdb\".\"sources\".\"dvf_2024_dev\"\n    \n),\nventes_immobiliers_filtrees AS (\n    \n    SELECT \n        id_mutation,\n        CAST(valeur_fonciere AS FLOAT) as valeur_fonciere,\n        CAST(longitude AS FLOAT) as longitude,\n        CAST(latitude AS FLOAT) as latitude,\n        CAST(nombre_pieces_principales AS NUMERIC) as nombre_pieces_principales,\n        CAST(surface_reelle_bati AS NUMERIC) as surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\nventes_immobiliers_aggregees_au_bien AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        ventes_immobiliers_filtrees\n    GROUP BY \n        id_mutation\n\n),\nbien_principal_de_la_vente AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            ventes_immobiliers_filtrees\n    ) subquery\n    WHERE\n        rang = 1\n\n) \nSELECT \n    bien_principal_de_la_vente.id_mutation,\n    bien_principal_de_la_vente.valeur_fonciere,\n    bien_principal_de_la_vente.longitude,\n    bien_principal_de_la_vente.latitude,\n    ventes_immobiliers_aggregees_au_bien.total_pieces,\n    ventes_immobiliers_aggregees_au_bien.total_surface,\n    bien_principal_de_la_vente.type_local,\n    bien_principal_de_la_vente.code_postal,\n    bien_principal_de_la_vente.code_commune,\n    ST_SetSRID(ST_MakePoint(bien_principal_de_la_vente.longitude, bien_principal_de_la_vente.latitude), 4326) as geopoint,\n    bien_principal_de_la_vente.valeur_fonciere / ventes_immobiliers_aggregees_au_bien.total_surface as prix_m2,\n    infos_communes.nom_commune,\n    infos_communes.code_arrondissement,\n    infos_communes.code_departement,\n    infos_communes.code_region,\n    infos_communes.nom_arrondissement,\n    infos_communes.nom_departement,\n    infos_communes.nom_region,\n    2024 as millesime\nFROM \n    bien_principal_de_la_vente\nJOIN \n    ventes_immobiliers_aggregees_au_bien ON ventes_immobiliers_aggregees_au_bien.id_mutation = bien_principal_de_la_vente.id_mutation\nLEFT JOIN\n    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes on infos_communes.code_commune = bien_principal_de_la_vente.code_commune\n\n)\n    \n", "relation_name": "\"defaultdb\".\"intermediaires\".\"ventes_immobilieres\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.423115Z", "completed_at": "2024-10-23T16:56:31.426219Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.427354Z", "completed_at": "2024-10-23T16:56:31.427359Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006338596343994141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_geo_communes_number", "compiled": true, "compiled_code": "--- Le nombre officiel de communes est de 35029 soit\n--- zone = metro & drom est de 34935 en 2024\n--- i.e. france metropole et departement d'outre mer\n--- https://www.collectivites-locales.gouv.fr/bulletin-dinformation-statistique-bis-de-la-dgcl\n--- PLUS zone = com  est 94 \n--- i.e. collectivit\u00e9 d'outre mer\n--- Plus 45 communes municipales (Paris, Lyon, Marseille)\n\n\n\nwith source as (\n    SELECT COUNT(DISTINCT code_commune) as commune_count\n    FROM \"defaultdb\".\"prepare\".\"infos_communes\"\n)\n\nselect *\nfrom source\nwhere commune_count != 35074", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.430800Z", "completed_at": "2024-10-23T16:56:31.433726Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.434870Z", "completed_at": "2024-10-23T16:56:31.434874Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006180286407470703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.asset_geo_communes_distinct", "compiled": true, "compiled_code": "--- V\u00e9rifie que les communes du mod\u00e8le sont distinctes\n\n\n\nwith counts as (\n    SELECT code_commune, COUNT(*) as num_com\n    FROM \"defaultdb\".\"prepare\".\"infos_communes\"\n    GROUP BY code_commune\n)\n\nselect *\nfrom counts\nwhere num_com > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.438304Z", "completed_at": "2024-10-23T16:56:31.442433Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.443585Z", "completed_at": "2024-10-23T16:56:31.443589Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00738978385925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_infos_communes_code_commune.4e03754490", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_commune\nfrom \"defaultdb\".\"prepare\".\"infos_communes\"\nwhere code_commune is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.447005Z", "completed_at": "2024-10-23T16:56:31.450832Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.451973Z", "completed_at": "2024-10-23T16:56:31.451977Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007078409194946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_infos_communes_code_commune.9c66e801cd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_commune as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"infos_communes\"\nwhere code_commune is not null\ngroup by code_commune\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.455409Z", "completed_at": "2024-10-23T16:56:31.458385Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.459513Z", "completed_at": "2024-10-23T16:56:31.459517Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061969757080078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_geo_postaux_distinct", "compiled": true, "compiled_code": "--- V\u00e9rifie que les codes postaux du mod\u00e8le sont distincts\n\n\n\nwith counts as (\n    SELECT code_postal, COUNT(*) as num_cp\n    FROM \"defaultdb\".\"prepare\".\"infos_postes\"\n    GROUP BY code_postal\n)\n\nselect *\nfrom counts\nwhere num_cp > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.462929Z", "completed_at": "2024-10-23T16:56:31.466795Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.467918Z", "completed_at": "2024-10-23T16:56:31.467922Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007099151611328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_infos_postes_code_postal.95fe263c82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_postal\nfrom \"defaultdb\".\"prepare\".\"infos_postes\"\nwhere code_postal is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.471376Z", "completed_at": "2024-10-23T16:56:31.475210Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:31.476347Z", "completed_at": "2024-10-23T16:56:31.476351Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0070953369140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_infos_postes_code_postal.ecffc082fd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_postal as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"infos_postes\"\nwhere code_postal is not null\ngroup by code_postal\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:31.479758Z", "completed_at": "2024-10-23T16:56:32.271165Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:32.272373Z", "completed_at": "2024-10-23T16:56:32.272380Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7954416275024414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.activite_renomee", "compiled": true, "compiled_code": "\n\nWITH logement AS (\n    select * \n    \n        from \"defaultdb\".\"sources\".\"logement_2020_dev\"\n    \n),\nlogement_renomee AS (\n    (     \n\n    \n\n    \n    \n    \n\n\n    select \n        CASE\n            WHEN \"ARM\" != 'ZZZZZ' THEN \"ARM\"\n            ELSE \"COMMUNE\" \n        END AS code_commune_insee,\n        \"CATL\",\n        CASE \n\t\t    WHEN \"IRIS\" = 'ZZZZZZZZZ' THEN CONCAT(\"COMMUNE\", '0000')\n\t\t    ELSE \"IRIS\"\n\t    END as code_iris,\n        \n            CASE\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '020' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '013' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '002' then 'menages_avec_2_et_plus_personnes_actives'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '019' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '014' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '041' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '026' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '015' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '018' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '016' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_personne_active'\n                \n                    when LPAD(CAST(\"INPAM\" AS TEXT), 3, '0') = '017' then 'menages_avec_1_personne_active'\n                \n            END AS \"INPAM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"TACTM\" AS TEXT), 3, '0') = '011' then 'menages_pr_activite_emploi'\n                \n                    when LPAD(CAST(\"TACTM\" AS TEXT), 3, '0') = '022' then 'menages_pr_activite_eleve'\n                \n                    when LPAD(CAST(\"TACTM\" AS TEXT), 3, '0') = '021' then 'menages_pr_activite_retraite_pre_retraite'\n                \n                    when LPAD(CAST(\"TACTM\" AS TEXT), 3, '0') = '024' then 'menages_pr_activite_au_foyer'\n                \n                    when LPAD(CAST(\"TACTM\" AS TEXT), 3, '0') = '012' then 'menages_pr_activite_chomeurs'\n                \n                    when LPAD(CAST(\"TACTM\" AS TEXT), 3, '0') = '025' then 'menages_pr_activite_autre'\n                \n            END AS \"TACTM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_eleve_etudiant_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n                    when LPAD(CAST(\"INEEM\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n                \n            END AS \"INEEM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '010' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '041' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '019' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '005' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '009' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '017' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '012' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '004' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '015' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '006' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '003' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '026' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '007' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '011' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '008' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '013' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '002' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '016' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '018' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_active_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '014' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '020' then 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n                \n                    when LPAD(CAST(\"INPOM\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_personne_active_avec_emploi'\n                \n            END AS \"INPOM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '013' then 'pr_scolarite_CAP_BEP'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '017' then 'pr_scolarite_bac_plus_3_ou_4'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '014' then 'pr_scolarite_bac_general_techno'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '012' then 'pr_scolarite_BEPC'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '015' then 'pr_scolarite_bar_pr'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '003' then 'pr_scolarite_fin_college'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '001' then 'pr_scolarite_avant_primaire'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '011' then 'pr_scolarite_CEP'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '019' then 'pr_scolarite_bac_plus_8'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '016' then 'pr_scolarite_bac_plus_2'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '002' then 'pr_scolarite_avant_college'\n                \n                    when LPAD(CAST(\"DIPLM\" AS TEXT), 3, '0') = '018' then 'pr_scolarite_bac_plus_5'\n                \n            END AS \"DIPLM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '007' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '008' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '011' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '010' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '003' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_personne_scolarisee'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '005' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '002' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '004' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '009' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '006' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '014' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '016' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '025' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_scolarisee'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '012' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '015' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n                    when LPAD(CAST(\"INPSM\" AS TEXT), 3, '0') = '013' then 'menages_avec_2_et_plus_personnes_scolarisees'\n                \n            END AS \"INPSM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '015' then 'pr_emploi_duree_limite'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '014' then 'pr_emploi_stage_entreprise'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '021' then 'pr_emploi_independant'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '022' then 'pr_emploi_employeur'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '011' then 'pr_emploi_apprentissage'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '023' then 'pr_emploi_aides_familiaux'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '013' then 'pr_emploi_contrat_aide'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '012' then 'pr_emploi_interim'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '0ZZ' then 'pr_emploi_sans_objet'\n                \n                    when LPAD(CAST(\"EMPLM\" AS TEXT), 3, '0') = '016' then 'pr_emploi_sans_duree_limite'\n                \n            END AS \"EMPLM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"TPM\" AS TEXT), 3, '0') = '00Z' then 'menages_pr_travail_temps_sans_objet_sans_emploi'\n                \n                    when LPAD(CAST(\"TPM\" AS TEXT), 3, '0') = '001' then 'menages_pr_travail_temps_complet'\n                \n                    when LPAD(CAST(\"TPM\" AS TEXT), 3, '0') = '002' then 'menages_pr_travail_temps_partiel'\n                \n            END AS \"TPM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"RECHM\" AS TEXT), 3, '0') = '000' then 'menages_pr_pas_de_recherche_emploi'\n                \n                    when LPAD(CAST(\"RECHM\" AS TEXT), 3, '0') = '00Z' then 'menages_pr_recherche_emploi_sans_objet_en_emploi'\n                \n                    when LPAD(CAST(\"RECHM\" AS TEXT), 3, '0') = '009' then 'menages_pr_recherche_emploi_non_declaree'\n                \n                    when LPAD(CAST(\"RECHM\" AS TEXT), 3, '0') = '001' then 'menages_pr_recherche_emploi_moins_un_an'\n                \n                    when LPAD(CAST(\"RECHM\" AS TEXT), 3, '0') = '002' then 'menages_pr_recherche_emploi_plus_un_an'\n                \n            END AS \"RECHM\",\n        \n        CAST(CAST(\"IPONDL\" AS NUMERIC) AS INT) AS poids_du_logement\n    \n    FROM \n        logement\n\n )\n)\n\nSELECT \n    *\nFROM \n    logement_renomee", "relation_name": "\"defaultdb\".\"intermediaires\".\"activite_renomee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:32.276679Z", "completed_at": "2024-10-23T16:56:33.158584Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:33.159790Z", "completed_at": "2024-10-23T16:56:33.159797Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8860669136047363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.demographie_renomee", "compiled": true, "compiled_code": "\n\nWITH logement AS (\n    select * \n    \n        from \"defaultdb\".\"sources\".\"logement_2020_dev\"\n    \n),\nlogement_renomee AS (\n    (     \n\n    \n\n    \n    \n    \n\n\n    select \n        CASE\n            WHEN \"ARM\" != 'ZZZZZ' THEN \"ARM\"\n            ELSE \"COMMUNE\" \n        END AS code_commune_insee,\n        \"CATL\",\n        CASE \n\t\t    WHEN \"IRIS\" = 'ZZZZZZZZZ' THEN CONCAT(\"COMMUNE\", '0000')\n\t\t    ELSE \"IRIS\"\n\t    END as code_iris,\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '020' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '016' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '015' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '025' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '014' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '013' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '019' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '018' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '021' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP24M\" AS TEXT), 3, '0') = '017' then 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n                \n            END AS \"INP24M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '020' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '007' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '010' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '004' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '015' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '022' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '006' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '011' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '017' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '013' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '003' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '012' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '019' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '008' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '038' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_personne_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '005' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '018' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '002' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '016' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '026' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '014' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n                    when LPAD(CAST(\"INPER1\" AS TEXT), 3, '0') = '009' then 'menages_avec_2_et_plus_personnes_masculin'\n                \n            END AS \"INPER1\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP3M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_3_ans_et_moins'\n                \n            END AS \"INP3M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '015' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '014' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '013' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP15M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n                \n            END AS \"INP15M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '016' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '041' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '014' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '020' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '055' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '025' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '019' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '022' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '015' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '023' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '013' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '018' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '017' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '021' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP19M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n                \n            END AS \"INP19M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '014' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '039' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '015' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '017' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '013' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '016' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '020' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '019' then 'menages_avec_1_personne_feminin'\n                \n                    when LPAD(CAST(\"INPER2\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_personne_feminin'\n                \n            END AS \"INPER2\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP5M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n                \n            END AS \"INP5M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '013' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '014' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_11_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP11M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n                \n            END AS \"INP11M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '015' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '025' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '014' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '016' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '055' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '023' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '010' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '021' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '017' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '013' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '003' then 'menages_avec_3_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '020' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '005' then 'menages_avec_5_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '008' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_personne'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '018' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '028' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '002' then 'menages_avec_2_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '041' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '006' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '034' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '019' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '004' then 'menages_avec_4_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '009' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '022' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '026' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '011' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '007' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '012' then 'menages_avec_6_et_plus_personnes'\n                \n                    when LPAD(CAST(\"INPER\" AS TEXT), 3, '0') = '024' then 'menages_avec_6_et_plus_personnes'\n                \n            END AS \"INPER\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"STAT_CONJM\" AS TEXT), 3, '0') = '004' then 'menages_pr_veuve'\n                \n                    when LPAD(CAST(\"STAT_CONJM\" AS TEXT), 3, '0') = '003' then 'menages_pr_concubinage_union_libre'\n                \n                    when LPAD(CAST(\"STAT_CONJM\" AS TEXT), 3, '0') = '002' then 'menages_pr_pacsee'\n                \n                    when LPAD(CAST(\"STAT_CONJM\" AS TEXT), 3, '0') = '005' then 'menages_pr_divorcee'\n                \n                    when LPAD(CAST(\"STAT_CONJM\" AS TEXT), 3, '0') = '006' then 'menages_pr_celibataire'\n                \n                    when LPAD(CAST(\"STAT_CONJM\" AS TEXT), 3, '0') = '001' then 'menages_pr_mariee'\n                \n            END AS \"STAT_CONJM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '017' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '019' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '055' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP60M\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n                \n            END AS \"INP60M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"SEXEM\" AS TEXT), 3, '0') = '002' then 'menages_pr_femmes'\n                \n                    when LPAD(CAST(\"SEXEM\" AS TEXT), 3, '0') = '001' then 'menages_pr_homme'\n                \n            END AS \"SEXEM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '048' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '018' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP75M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n                \n            END AS \"INP75M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '024' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '015' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '014' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '017' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '013' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '010' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '016' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n                    when LPAD(CAST(\"INP17M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n                \n            END AS \"INP17M\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '004' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '018' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '001' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '011' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '007' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '055' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '009' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '008' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '006' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '002' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '003' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '012' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '000' then 'menages_avec_0_personne_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '016' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n                    when LPAD(CAST(\"INP65M\" AS TEXT), 3, '0') = '005' then 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n                \n            END AS \"INP65M\",\n        \n        CAST(CAST(\"IPONDL\" AS NUMERIC) AS INT) AS poids_du_logement\n    \n    FROM \n        logement\n\n )\n)\n\nSELECT \n    *\nFROM \n    logement_renomee", "relation_name": "\"defaultdb\".\"intermediaires\".\"demographie_renomee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:33.164100Z", "completed_at": "2024-10-23T16:56:33.937471Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:33.938733Z", "completed_at": "2024-10-23T16:56:33.938740Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7774391174316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.habitat_renomee", "compiled": true, "compiled_code": "\n\nWITH logement AS (\n    select * \n    \n        from \"defaultdb\".\"sources\".\"logement_2020_dev\"\n    \n),\nlogement_renomee AS (\n    (     \n\n    \n\n    \n    \n    \n\n\n    select \n        CASE\n            WHEN \"ARM\" != 'ZZZZZ' THEN \"ARM\"\n            ELSE \"COMMUNE\" \n        END AS code_commune_insee,\n        \"CATL\",\n        CASE \n\t\t    WHEN \"IRIS\" = 'ZZZZZZZZZ' THEN CONCAT(\"COMMUNE\", '0000')\n\t\t    ELSE \"IRIS\"\n\t    END as code_iris,\n        \n            CASE\n                \n                    when LPAD(CAST(\"SANI\" AS TEXT), 3, '0') = '002' then 'metro__logement_salle_de_bain'\n                \n                    when LPAD(CAST(\"SANI\" AS TEXT), 3, '0') = '001' then 'metro__logement_avec_baignoire_ou_douche_hors_piece_reservee'\n                \n                    when LPAD(CAST(\"SANI\" AS TEXT), 3, '0') = '000' then 'metro__logement_ni_baignoire_ni_douche'\n                \n            END AS \"SANI\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C10' then 'construction_2007'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2013'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2012'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C20' then 'construction_2018'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C10' then 'construction_2008'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2015'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C10' then 'construction_1991_2025'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'A11' then 'construction_avant_1919'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C20' then 'construction_2019'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2010'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C20' then 'construction_2022'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2014'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C10' then 'construction_2009'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C20' then 'construction_2020'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2017'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'B11' then 'construction_1916_1970'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2011'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'A12' then 'construction_1919_1945'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C20' then 'construction_2021'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'B12' then 'construction_1971_1990'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C11' then 'construction_2016'\n                \n                    when LPAD(CAST(\"ACHL\" AS TEXT), 3, '0') = 'C10' then 'construction_2006'\n                \n            END AS \"ACHL\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"BAIN\" AS TEXT), 3, '0') = '001' then 'dom__beignoire_ou_douche'\n                \n                    when LPAD(CAST(\"BAIN\" AS TEXT), 3, '0') = '002' then 'dom__ni_beignoire_ni_douche'\n                \n            END AS \"BAIN\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"HLML\" AS TEXT), 3, '0') = '001' then 'appartient_hlm'\n                \n                    when LPAD(CAST(\"HLML\" AS TEXT), 3, '0') = '002' then 'appartient_pas_hlm'\n                \n            END AS \"HLML\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '014' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '002' then 'logements_avec_2_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '019' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '009' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '017' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '018' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '012' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '006' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '005' then 'logements_avec_5_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '020' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '003' then 'logements_avec_3_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '015' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '011' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '010' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '008' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '007' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '004' then 'logements_avec_4_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '013' then 'logements_avec_6_et_plus_pieces'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '001' then 'logements_avec_1_piece'\n                \n                    when LPAD(CAST(\"NBPI\" AS TEXT), 3, '0') = '016' then 'logements_avec_6_et_plus_pieces'\n                \n            END AS \"NBPI\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"CMBL\" AS TEXT), 3, '0') = '006' then 'metro__combustible_autre'\n                \n                    when LPAD(CAST(\"CMBL\" AS TEXT), 3, '0') = '002' then 'metro__combustible_gaz_de_ville_ou_reseau'\n                \n                    when LPAD(CAST(\"CMBL\" AS TEXT), 3, '0') = '004' then 'metro__combustible_electricte'\n                \n                    when LPAD(CAST(\"CMBL\" AS TEXT), 3, '0') = '005' then 'metro__combustible_gaz_bouteille_ou_citerne'\n                \n                    when LPAD(CAST(\"CMBL\" AS TEXT), 3, '0') = '001' then 'metro__combustible_chauffage_urbain'\n                \n                    when LPAD(CAST(\"CMBL\" AS TEXT), 3, '0') = '003' then 'metro__combustible_fioul'\n                \n            END AS \"CMBL\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"CUIS\" AS TEXT), 3, '0') = '002' then 'dom__sans_cuisine_interieure_evier'\n                \n                    when LPAD(CAST(\"CUIS\" AS TEXT), 3, '0') = '001' then 'dom__avec_cuisine_interieure_evier'\n                \n            END AS \"CUIS\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"EGOUL\" AS TEXT), 3, '0') = '001' then 'dom__raccordement_egouts'\n                \n                    when LPAD(CAST(\"EGOUL\" AS TEXT), 3, '0') = '002' then 'dom__raccordement_fosse_septique'\n                \n                    when LPAD(CAST(\"EGOUL\" AS TEXT), 3, '0') = '004' then 'dom__evacuation_sol'\n                \n                    when LPAD(CAST(\"EGOUL\" AS TEXT), 3, '0') = '003' then 'dom__raccordement_puisard'\n                \n            END AS \"EGOUL\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"BATI\" AS TEXT), 3, '0') = '002' then 'dom__cases_traditionnelles'\n                \n                    when LPAD(CAST(\"BATI\" AS TEXT), 3, '0') = '003' then 'dom__habitation_en_bois'\n                \n                    when LPAD(CAST(\"BATI\" AS TEXT), 3, '0') = '004' then 'dom__habitation_en_dur'\n                \n                    when LPAD(CAST(\"BATI\" AS TEXT), 3, '0') = '001' then 'dom__habitation_de_fortune'\n                \n            END AS \"BATI\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"GARL\" AS TEXT), 3, '0') = '002' then 'sans_emplacement_stationnement'\n                \n                    when LPAD(CAST(\"GARL\" AS TEXT), 3, '0') = '001' then 'avec_emplacement_stationnement'\n                \n            END AS \"GARL\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"ELEC\" AS TEXT), 3, '0') = '002' then 'dom__sans_electricite'\n                \n                    when LPAD(CAST(\"ELEC\" AS TEXT), 3, '0') = '001' then 'dom__avec_electricite'\n                \n            END AS \"ELEC\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '006' then 'emmenagement_40_49_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '007' then 'emmenagement_50_59_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '009' then 'emmenagement_plus_70_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '005' then 'emmenagement_30_39_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '000' then 'emmenagement_moins_2_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '003' then 'emmenagement_10_19_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '002' then 'emmenagement_5_9_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '008' then 'emmenagement_60_69_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '001' then 'emmenagement_2_4_ans'\n                \n                    when LPAD(CAST(\"ANEMR\" AS TEXT), 3, '0') = '004' then 'emmenagement_20_29_ans'\n                \n            END AS \"ANEMR\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"SURF\" AS TEXT), 3, '0') = '003' then 'logements_40_60_mc'\n                \n                    when LPAD(CAST(\"SURF\" AS TEXT), 3, '0') = '002' then 'logements_30_40_mc'\n                \n                    when LPAD(CAST(\"SURF\" AS TEXT), 3, '0') = '007' then 'logements_plus_120_mc'\n                \n                    when LPAD(CAST(\"SURF\" AS TEXT), 3, '0') = '004' then 'logements_60_80_mc'\n                \n                    when LPAD(CAST(\"SURF\" AS TEXT), 3, '0') = '006' then 'logements_100_120_mc'\n                \n                    when LPAD(CAST(\"SURF\" AS TEXT), 3, '0') = '001' then 'logements_moins_30_mc'\n                \n                    when LPAD(CAST(\"SURF\" AS TEXT), 3, '0') = '005' then 'logements_80_100_mc'\n                \n            END AS \"SURF\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"TYPL\" AS TEXT), 3, '0') = '005' then 'logement_type_habitation_fortune'\n                \n                    when LPAD(CAST(\"TYPL\" AS TEXT), 3, '0') = '003' then 'logement_type_appartement_foyer'\n                \n                    when LPAD(CAST(\"TYPL\" AS TEXT), 3, '0') = '001' then 'logement_type_maison'\n                \n                    when LPAD(CAST(\"TYPL\" AS TEXT), 3, '0') = '004' then 'logement_type_chambre_hotel'\n                \n                    when LPAD(CAST(\"TYPL\" AS TEXT), 3, '0') = '002' then 'logement_type_appartement'\n                \n                    when LPAD(CAST(\"TYPL\" AS TEXT), 3, '0') = '006' then 'logement_type_piece_independante'\n                \n            END AS \"TYPL\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"WC\" AS TEXT), 3, '0') = '002' then 'dom__logements_sans_wc_interieurs'\n                \n                    when LPAD(CAST(\"WC\" AS TEXT), 3, '0') = '001' then 'dom__logements_avec_wc_interieurs'\n                \n            END AS \"WC\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '055' then 'pr_55_64'\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '020' then 'pr_20_24'\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '015' then 'pr_15_19'\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '000' then 'pr_moins_15'\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '080' then 'pr_plus_80'\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '025' then 'pr_25_39'\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '065' then 'pr_64_79'\n                \n                    when LPAD(CAST(\"AGEMEN8\" AS TEXT), 3, '0') = '040' then 'pr_40_54'\n                \n            END AS \"AGEMEN8\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"STOCD\" AS TEXT), 3, '0') = '023' then 'logements_occupes_par_locataire_meuble_hotel'\n                \n                    when LPAD(CAST(\"STOCD\" AS TEXT), 3, '0') = '010' then 'logements_occupes_par_proprietaires'\n                \n                    when LPAD(CAST(\"STOCD\" AS TEXT), 3, '0') = '030' then 'logements_occupes_par_loge_gratuitemenent'\n                \n                    when LPAD(CAST(\"STOCD\" AS TEXT), 3, '0') = '021' then 'logements_occupes_par_locataire_sous_locataire_vide_non_hlm'\n                \n                    when LPAD(CAST(\"STOCD\" AS TEXT), 3, '0') = '022' then 'logements_occupes_par_locataire_sous_locataire_vide_hlm'\n                \n            END AS \"STOCD\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"TYPC\" AS TEXT), 3, '0') = '005' then 'logement_type_construction_provisoire'\n                \n                    when LPAD(CAST(\"TYPC\" AS TEXT), 3, '0') = '001' then 'logement_type_contruction_un_logement_isole'\n                \n                    when LPAD(CAST(\"TYPC\" AS TEXT), 3, '0') = '004' then 'logement_type_contruction_autre_logement'\n                \n                    when LPAD(CAST(\"TYPC\" AS TEXT), 3, '0') = '003' then 'logement_type_contruction_plusieurs_logements'\n                \n                    when LPAD(CAST(\"TYPC\" AS TEXT), 3, '0') = '002' then 'logement_type_contruction_un_logement_groupe'\n                \n            END AS \"TYPC\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"ASCEN\" AS TEXT), 3, '0') = '001' then 'avec_ascensseur'\n                \n                    when LPAD(CAST(\"ASCEN\" AS TEXT), 3, '0') = '002' then 'sans_ascensseur'\n                \n            END AS \"ASCEN\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '003' then 'emmenagement_1920_1939'\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '006' then 'emmenagement_1970_1979'\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '009' then 'emmenagement_apres_1999'\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '008' then 'emmenagement_1990_1999'\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '005' then 'emmenagement_1940_1969'\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '007' then 'emmenagement_1980_1989'\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '002' then 'emmenagement_1900_1919'\n                \n                    when LPAD(CAST(\"AEMMR\" AS TEXT), 3, '0') = '004' then 'emmenagement_1940_1959'\n                \n            END AS \"AEMMR\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"CHAU\" AS TEXT), 3, '0') = '002' then 'dom__abscence_chauffage'\n                \n                    when LPAD(CAST(\"CHAU\" AS TEXT), 3, '0') = '001' then 'dom__presence_chauffage'\n                \n            END AS \"CHAU\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"CLIM\" AS TEXT), 3, '0') = '001' then 'dom__avec_piece_climatisee'\n                \n                    when LPAD(CAST(\"CLIM\" AS TEXT), 3, '0') = '002' then 'dom__sans_piece_climatisee'\n                \n            END AS \"CLIM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"SANIDOM\" AS TEXT), 3, '0') = '022' then 'dom__logement_ni_baignoire_ni_douche'\n                \n                    when LPAD(CAST(\"SANIDOM\" AS TEXT), 3, '0') = '021' then 'dom__logement_ni_baignoire_ni_douche_avec_toilettes_interieures'\n                \n                    when LPAD(CAST(\"SANIDOM\" AS TEXT), 3, '0') = '012' then 'dom__logement_avec_baignoire_ou_douche_sans_toilettes_interieures'\n                \n                    when LPAD(CAST(\"SANIDOM\" AS TEXT), 3, '0') = '011' then 'dom__logement_avec_baignoire_ou_douche_avec_toilettes_interieures'\n                \n            END AS \"SANIDOM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"EAU\" AS TEXT), 3, '0') = '003' then 'dom__aucun_point_eau'\n                \n                    when LPAD(CAST(\"EAU\" AS TEXT), 3, '0') = '001' then 'dom__eau_froide_seulement'\n                \n                    when LPAD(CAST(\"EAU\" AS TEXT), 3, '0') = '002' then 'dom__eau_froide_et_chaude'\n                \n            END AS \"EAU\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"CHOS\" AS TEXT), 3, '0') = '002' then 'dom__abscence_chauffe_eau_solaire'\n                \n                    when LPAD(CAST(\"CHOS\" AS TEXT), 3, '0') = '001' then 'dom__presence_chauffe_eau_solaire'\n                \n            END AS \"CHOS\",\n        \n        CAST(CAST(\"IPONDL\" AS NUMERIC) AS INT) AS poids_du_logement\n    \n    FROM \n        logement\n\n )\n)\n\nSELECT \n    *\nFROM \n    logement_renomee", "relation_name": "\"defaultdb\".\"intermediaires\".\"habitat_renomee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:33.943112Z", "completed_at": "2024-10-23T16:56:34.732805Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.734071Z", "completed_at": "2024-10-23T16:56:34.734078Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7939045429229736, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.mobilite_renomee", "compiled": true, "compiled_code": "\n\nWITH logement AS (\n    select * \n    \n        from \"defaultdb\".\"sources\".\"logement_2020_dev\"\n    \n),\nlogement_renomee AS (\n    (     \n\n    \n\n    \n    \n    \n\n\n    select \n        CASE\n            WHEN \"ARM\" != 'ZZZZZ' THEN \"ARM\"\n            ELSE \"COMMUNE\" \n        END AS code_commune_insee,\n        \"CATL\",\n        CASE \n\t\t    WHEN \"IRIS\" = 'ZZZZZZZZZ' THEN CONCAT(\"COMMUNE\", '0000')\n\t\t    ELSE \"IRIS\"\n\t    END as code_iris,\n        \n            CASE\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '002' then 'menages_avec_pr_annee_avant_meme_commune'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '004' then 'menages_avec_pr_annee_avant_meme_region'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '001' then 'menages_avec_pr_annee_avant_meme_logement'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '003' then 'menages_avec_pr_annee_avant_meme_departement'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '007' then 'menages_avec_pr_annee_avant_autre_region_com'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '006' then 'menages_avec_pr_annee_avant_autre_region_dom'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '009' then 'menages_avec_pr_annee_avant_etranger'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '005' then 'menages_avec_pr_annee_avant_autre_region_metro'\n                \n                    when LPAD(CAST(\"IRANM\" AS TEXT), 3, '0') = '008' then 'menages_avec_pr_annee_avant_union_europeenne'\n                \n            END AS \"IRANM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"INAIM\" AS TEXT), 3, '0') = '001' then 'pr_naissance_department_actuelle'\n                \n                    when LPAD(CAST(\"INAIM\" AS TEXT), 3, '0') = '005' then 'pr_naissance_hors_region_actuelle_com'\n                \n                    when LPAD(CAST(\"INAIM\" AS TEXT), 3, '0') = '003' then 'pr_naissance_hors_region_actuelle_metropole'\n                \n                    when LPAD(CAST(\"INAIM\" AS TEXT), 3, '0') = '002' then 'pr_naissance_department_region_actuelle'\n                \n                    when LPAD(CAST(\"INAIM\" AS TEXT), 3, '0') = '006' then 'pr_naissance_etranger'\n                \n                    when LPAD(CAST(\"INAIM\" AS TEXT), 3, '0') = '004' then 'pr_naissance_hors_region_actuelle_dom'\n                \n            END AS \"INAIM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"DEROU\" AS TEXT), 3, '0') = '003' then 'dom__trois_ou_plus_deux_roues'\n                \n                    when LPAD(CAST(\"DEROU\" AS TEXT), 3, '0') = '000' then 'dom__aucun_deux_roues'\n                \n                    when LPAD(CAST(\"DEROU\" AS TEXT), 3, '0') = '001' then 'dom__un_deux_roues'\n                \n                    when LPAD(CAST(\"DEROU\" AS TEXT), 3, '0') = '002' then 'dom__deux_deux_roues'\n                \n            END AS \"DEROU\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"VOIT\" AS TEXT), 3, '0') = '002' then 'menages_2_voitures'\n                \n                    when LPAD(CAST(\"VOIT\" AS TEXT), 3, '0') = '000' then 'menages_0_voiture'\n                \n                    when LPAD(CAST(\"VOIT\" AS TEXT), 3, '0') = '001' then 'menages_1_voiture'\n                \n                    when LPAD(CAST(\"VOIT\" AS TEXT), 3, '0') = '003' then 'menages_3_et_plus_voitures'\n                \n            END AS \"VOIT\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '006' then 'pr_travail_hors_region_actuelle_com'\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '002' then 'pr_travail_commune_departement_actuel'\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '007' then 'pr_travail_etranger'\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '005' then 'pr_travail_hors_region_actuelle_dom'\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '003' then 'pr_travail_department_region_actuel'\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '004' then 'pr_travail_hors_region_actuelle_metropole'\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '00Z' then 'pr_travail_sans_objet_sans_emploi'\n                \n                    when LPAD(CAST(\"ILTM\" AS TEXT), 3, '0') = '001' then 'pr_travail_commune_actuelle'\n                \n            END AS \"ILTM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"TRANSM\" AS TEXT), 3, '0') = '002' then 'menages_pr_transport_travail_pieds'\n                \n                    when LPAD(CAST(\"TRANSM\" AS TEXT), 3, '0') = '004' then 'menages_pr_transport_travail_deux_roues'\n                \n                    when LPAD(CAST(\"TRANSM\" AS TEXT), 3, '0') = '006' then 'menages_pr_transport_travail_transport_commune'\n                \n                    when LPAD(CAST(\"TRANSM\" AS TEXT), 3, '0') = '005' then 'menages_pr_transport_travail_voiture'\n                \n                    when LPAD(CAST(\"TRANSM\" AS TEXT), 3, '0') = '003' then 'menages_pr_transport_travail_velo'\n                \n            END AS \"TRANSM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"IMMIM\" AS TEXT), 3, '0') = '001' then 'pr_immigration_immigre'\n                \n                    when LPAD(CAST(\"IMMIM\" AS TEXT), 3, '0') = '002' then 'pr_immigration_non_immigre'\n                \n            END AS \"IMMIM\",\n        \n            CASE\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '007' then 'pr_etudes_etranger'\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '005' then 'pr_etudes_hors_region_actuelle_dom'\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '003' then 'pr_etudes_department_region_actuel'\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '006' then 'pr_etudes_hors_region_actuelle_com'\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '00Z' then 'pr_etudes_sans_objet_non_inscrit'\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '004' then 'pr_etudes_hors_region_actuelle_metropole'\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '001' then 'pr_etudes_commune_actuelle'\n                \n                    when LPAD(CAST(\"ILETUDM\" AS TEXT), 3, '0') = '002' then 'pr_etudes_commune_departement_actuel'\n                \n            END AS \"ILETUDM\",\n        \n        CAST(CAST(\"IPONDL\" AS NUMERIC) AS INT) AS poids_du_logement\n    \n    FROM \n        logement\n\n )\n)\n\nSELECT \n    *\nFROM \n    logement_renomee", "relation_name": "\"defaultdb\".\"intermediaires\".\"mobilite_renomee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.738444Z", "completed_at": "2024-10-23T16:56:34.747290Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.748423Z", "completed_at": "2024-10-23T16:56:34.748428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012115478515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.revenu_iris", "compiled": true, "compiled_code": "-- L'insee ne fournit que les infos sur les iris des communes iris\u00e9es\n-- Ajouter les autres communes est impossible car la table commune ne reporte pas les m\u00eames champs\n-- Aussi, revenu par isis utilise la g\u00e9ographie 2022 qu'il convient de transposer avec la g\u00e9ographie 2024\n-- \n\nwith filosofi_iris as (\n    select * \n    from \"defaultdb\".\"sources\".\"filosofi_iris_2021\"\n\n),\nrenamed_columns as (\n    select\n        \"IRIS\" as code_iris_2022_filosofi,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_PIMP21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_menages_fiscaux_imposes_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_TP6021\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as taux_bas_revenus_declares_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_INCERT21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as incertitude,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_Q121\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as quartile_1_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_MED21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as mediane_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_Q321\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as quartile_3_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_EQ21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as ecart_interquartile_rapporte_mediane,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D121\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_1_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D221\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_2_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D321\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_3_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D421\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_4_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D621\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_6_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D721\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_7_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D821\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_8_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_D921\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as decile_9_euro,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_RD21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as rapport_interdecile_d9_d1,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_S80S2021\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as s80_s20,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_GI21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as indice_gini,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_PACT21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_revenus_activite_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_PTSA21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_salaires_traitements_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_PCHO21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_indemnites_chomage_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_PBEN21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_revenus_activites_non_salariees_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_PPEN21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_pensions_retraites_rentes_pourcentage,\n        \n        cast(nullif(nullif(nullif(nullif(replace(\"DEC_PAUT21\", ',', '.'), 'ns'), 'so'), 's'), 'nd') as NUMERIC)\n as part_autres_revenus_pourcentage\n    from filosofi_iris\n), \naggregated_with_infos_iris as (\n    SELECT\n      *\n    FROM\n      renamed_columns\n    JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_iris\" as infos_iris\n    ON\n      renamed_columns.code_iris_2024_filosofi = infos_iris.code_iris_2024\n  )\n\nselect * from aggregated_with_infos_iris", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.752046Z", "completed_at": "2024-10-23T16:56:34.756206Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.757380Z", "completed_at": "2024-10-23T16:56:34.757385Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0076067447662353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_professionels_sante_departement_departement.2b0d9839bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect departement\nfrom \"defaultdb\".\"prepare\".\"professionels_sante_departement\"\nwhere departement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.760941Z", "completed_at": "2024-10-23T16:56:34.764873Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.766129Z", "completed_at": "2024-10-23T16:56:34.766134Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0074231624603271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_professionels_sante_departement_libelle_departement.3f71960534", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect libelle_departement\nfrom \"defaultdb\".\"prepare\".\"professionels_sante_departement\"\nwhere libelle_departement is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.769663Z", "completed_at": "2024-10-23T16:56:34.773655Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.774789Z", "completed_at": "2024-10-23T16:56:34.774793Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007342100143432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_professionels_sante_departement_libelle_region.350a716b1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect libelle_region\nfrom \"defaultdb\".\"prepare\".\"professionels_sante_departement\"\nwhere libelle_region is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.778249Z", "completed_at": "2024-10-23T16:56:34.783832Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.785022Z", "completed_at": "2024-10-23T16:56:34.785027Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008910655975341797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_professionels_sante_departement_region.204f3127e8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect region\nfrom \"defaultdb\".\"prepare\".\"professionels_sante_departement\"\nwhere region is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.788457Z", "completed_at": "2024-10-23T16:56:34.792469Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.793666Z", "completed_at": "2024-10-23T16:56:34.793670Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007346153259277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_professionels_sante_departement_departement.075a531ca0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    departement as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"professionels_sante_departement\"\nwhere departement is not null\ngroup by departement\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.797180Z", "completed_at": "2024-10-23T16:56:34.801013Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.802157Z", "completed_at": "2024-10-23T16:56:34.802162Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007201433181762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_professionels_sante_departement_libelle_departement.ca5b280ea3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    libelle_departement as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"professionels_sante_departement\"\nwhere libelle_departement is not null\ngroup by libelle_departement\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.805642Z", "completed_at": "2024-10-23T16:56:34.809560Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.810714Z", "completed_at": "2024-10-23T16:56:34.810719Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007288694381713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_revenu_commune__code_commune_2024_.51e2e25aa8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect \"code_commune_2024\"\nfrom \"defaultdb\".\"prepare\".\"revenu_commune\"\nwhere \"code_commune_2024\" is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.814250Z", "completed_at": "2024-10-23T16:56:34.818077Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.819206Z", "completed_at": "2024-10-23T16:56:34.819210Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007194995880126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_revenu_commune__code_commune_2024_.89ea270e4d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    \"code_commune_2024\" as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"revenu_commune\"\nwhere \"code_commune_2024\" is not null\ngroup by \"code_commune_2024\"\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.822695Z", "completed_at": "2024-10-23T16:56:34.825726Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.826923Z", "completed_at": "2024-10-23T16:56:34.826927Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006398200988769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.ventes_immobilieres_enrichies", "compiled": true, "compiled_code": "-- Enrichie la base dvf group\u00e9e par mutation\n-- Ajoute le knn des prix au m2\n\n\n\nselect * from \"defaultdb\".\"intermediaires\".\"ventes_immobilieres\"", "relation_name": "\"defaultdb\".\"prepare\".\"ventes_immobilieres_enrichies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.830569Z", "completed_at": "2024-10-23T16:56:34.834651Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.835793Z", "completed_at": "2024-10-23T16:56:34.835797Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007474184036254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_ventes_immobilieres_id_mutation.3a68efca7e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_mutation\nfrom \"defaultdb\".\"intermediaires\".\"ventes_immobilieres\"\nwhere id_mutation is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.839274Z", "completed_at": "2024-10-23T16:56:34.843083Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:34.844215Z", "completed_at": "2024-10-23T16:56:34.844219Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007147312164306641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_ventes_immobilieres_id_mutation.c777a14fc3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id_mutation as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"intermediaires\".\"ventes_immobilieres\"\nwhere id_mutation is not null\ngroup by id_mutation\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:34.847704Z", "completed_at": "2024-10-23T16:56:37.688803Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:37.690031Z", "completed_at": "2024-10-23T16:56:37.690038Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.938995838165283, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.activite_communes", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_commune_insee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n    GROUP BY\n      code_commune_insee\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_commune_insee,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INEEM' as TEXT) as \"champs\",\n      cast(  \n           \"INEEM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_eleve_etudiant_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_eleve_etudiant_14_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_eleve_etudiant_14_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INEEM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TPM' as TEXT) as \"champs\",\n      cast(  \n           \"TPM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_travail_temps_complet'  , \n        \n            'menages_pr_travail_temps_partiel'  , \n        \n            'menages_pr_travail_temps_sans_objet_sans_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_travail_temps_complet'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_travail_temps_complet\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_travail_temps_partiel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_travail_temps_partiel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_travail_temps_sans_objet_sans_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_travail_temps_sans_objet_sans_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_TPM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPOM' as TEXT) as \"champs\",\n      cast(  \n           \"INPOM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_active_avec_emploi'  , \n        \n            'menages_avec_1_personne_active_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_active_avec_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_active_avec_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_active_avec_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_active_avec_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_actives_avec_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPOM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('DIPLM' as TEXT) as \"champs\",\n      cast(  \n           \"DIPLM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_scolarite_avant_primaire'  , \n        \n            'pr_scolarite_CEP'  , \n        \n            'pr_scolarite_BEPC'  , \n        \n            'pr_scolarite_CAP_BEP'  , \n        \n            'pr_scolarite_bac_general_techno'  , \n        \n            'pr_scolarite_bar_pr'  , \n        \n            'pr_scolarite_bac_plus_2'  , \n        \n            'pr_scolarite_bac_plus_3_ou_4'  , \n        \n            'pr_scolarite_bac_plus_5'  , \n        \n            'pr_scolarite_bac_plus_8'  , \n        \n            'pr_scolarite_avant_college'  , \n        \n            'pr_scolarite_fin_college' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_avant_primaire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_avant_primaire\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_CEP'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_CEP\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_BEPC'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_BEPC\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_CAP_BEP'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_CAP_BEP\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_general_techno'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_general_techno\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bar_pr'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bar_pr\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_2'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_2\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_3_ou_4'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_3_ou_4\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_5'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_5\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_8'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_8\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_avant_college'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_avant_college\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_fin_college'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_fin_college\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_DIPLM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPAM' as TEXT) as \"champs\",\n      cast(  \n           \"INPAM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_2_et_plus_personnes_actives'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_active'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_active\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_active'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_active\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_actives'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_actives\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPAM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('EMPLM' as TEXT) as \"champs\",\n      cast(  \n           \"EMPLM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_emploi_apprentissage'  , \n        \n            'pr_emploi_interim'  , \n        \n            'pr_emploi_contrat_aide'  , \n        \n            'pr_emploi_stage_entreprise'  , \n        \n            'pr_emploi_duree_limite'  , \n        \n            'pr_emploi_sans_duree_limite'  , \n        \n            'pr_emploi_independant'  , \n        \n            'pr_emploi_employeur'  , \n        \n            'pr_emploi_aides_familiaux'  , \n        \n            'pr_emploi_sans_objet' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_apprentissage'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_apprentissage\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_interim'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_interim\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_contrat_aide'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_contrat_aide\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_stage_entreprise'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_stage_entreprise\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_duree_limite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_duree_limite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_sans_duree_limite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_sans_duree_limite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_independant'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_independant\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_employeur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_employeur\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_aides_familiaux'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_aides_familiaux\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_sans_objet'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_sans_objet\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_EMPLM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('RECHM' as TEXT) as \"champs\",\n      cast(  \n           \"RECHM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_pas_de_recherche_emploi'  , \n        \n            'menages_pr_recherche_emploi_moins_un_an'  , \n        \n            'menages_pr_recherche_emploi_plus_un_an'  , \n        \n            'menages_pr_recherche_emploi_non_declaree'  , \n        \n            'menages_pr_recherche_emploi_sans_objet_en_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_pas_de_recherche_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_pas_de_recherche_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_moins_un_an'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_moins_un_an\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_plus_un_an'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_plus_un_an\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_non_declaree'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_non_declaree\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_sans_objet_en_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_sans_objet_en_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_RECHM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TACTM' as TEXT) as \"champs\",\n      cast(  \n           \"TACTM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_activite_emploi'  , \n        \n            'menages_pr_activite_chomeurs'  , \n        \n            'menages_pr_activite_retraite_pre_retraite'  , \n        \n            'menages_pr_activite_eleve'  , \n        \n            'menages_pr_activite_au_foyer'  , \n        \n            'menages_pr_activite_autre' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_chomeurs'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_chomeurs\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_retraite_pre_retraite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_retraite_pre_retraite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_eleve'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_eleve\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_au_foyer'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_au_foyer\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_autre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_autre\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_TACTM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPSM' as TEXT) as \"champs\",\n      cast(  \n           \"INPSM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_scolarisee'  , \n        \n            'menages_avec_1_personne_scolarisee'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_scolarisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_scolarisee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_scolarisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_scolarisee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_scolarisees'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_scolarisees\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPSM_par_geo\n      USING (code_commune_insee)\n\n    \n\n  )\n\nselect * from aggregated\n\n),\n\naggregated_with_infos_communes as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes\n    ON\n      aggregated.code_commune_insee = infos_communes.code_commune\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_communes", "relation_name": "\"defaultdb\".\"prepare\".\"activite_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:37.788268Z", "completed_at": "2024-10-23T16:56:40.629838Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:40.631041Z", "completed_at": "2024-10-23T16:56:40.631048Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.9413561820983887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.activite_iris", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_iris,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n    GROUP BY\n      code_iris\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_iris,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INEEM' as TEXT) as \"champs\",\n      cast(  \n           \"INEEM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_eleve_etudiant_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_eleve_etudiant_14_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_eleve_etudiant_14_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_eleves_etudiants_14_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INEEM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TPM' as TEXT) as \"champs\",\n      cast(  \n           \"TPM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_travail_temps_complet'  , \n        \n            'menages_pr_travail_temps_partiel'  , \n        \n            'menages_pr_travail_temps_sans_objet_sans_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_travail_temps_complet'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_travail_temps_complet\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_travail_temps_partiel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_travail_temps_partiel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_travail_temps_sans_objet_sans_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_travail_temps_sans_objet_sans_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_TPM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPOM' as TEXT) as \"champs\",\n      cast(  \n           \"INPOM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_active_avec_emploi'  , \n        \n            'menages_avec_1_personne_active_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi'  , \n        \n            'menages_avec_2_et_plus_personnes_actives_avec_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_active_avec_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_active_avec_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_active_avec_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_active_avec_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_actives_avec_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_actives_avec_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPOM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('DIPLM' as TEXT) as \"champs\",\n      cast(  \n           \"DIPLM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_scolarite_avant_primaire'  , \n        \n            'pr_scolarite_CEP'  , \n        \n            'pr_scolarite_BEPC'  , \n        \n            'pr_scolarite_CAP_BEP'  , \n        \n            'pr_scolarite_bac_general_techno'  , \n        \n            'pr_scolarite_bar_pr'  , \n        \n            'pr_scolarite_bac_plus_2'  , \n        \n            'pr_scolarite_bac_plus_3_ou_4'  , \n        \n            'pr_scolarite_bac_plus_5'  , \n        \n            'pr_scolarite_bac_plus_8'  , \n        \n            'pr_scolarite_avant_college'  , \n        \n            'pr_scolarite_fin_college' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_avant_primaire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_avant_primaire\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_CEP'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_CEP\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_BEPC'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_BEPC\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_CAP_BEP'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_CAP_BEP\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_general_techno'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_general_techno\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bar_pr'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bar_pr\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_2'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_2\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_3_ou_4'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_3_ou_4\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_5'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_5\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_bac_plus_8'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_bac_plus_8\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_avant_college'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_avant_college\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_scolarite_fin_college'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_scolarite_fin_college\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_DIPLM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPAM' as TEXT) as \"champs\",\n      cast(  \n           \"INPAM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_2_et_plus_personnes_actives'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active'  , \n        \n            'menages_avec_1_personne_active' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_active'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_active\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_active'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_active\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_actives'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_actives\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPAM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('EMPLM' as TEXT) as \"champs\",\n      cast(  \n           \"EMPLM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_emploi_apprentissage'  , \n        \n            'pr_emploi_interim'  , \n        \n            'pr_emploi_contrat_aide'  , \n        \n            'pr_emploi_stage_entreprise'  , \n        \n            'pr_emploi_duree_limite'  , \n        \n            'pr_emploi_sans_duree_limite'  , \n        \n            'pr_emploi_independant'  , \n        \n            'pr_emploi_employeur'  , \n        \n            'pr_emploi_aides_familiaux'  , \n        \n            'pr_emploi_sans_objet' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_apprentissage'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_apprentissage\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_interim'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_interim\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_contrat_aide'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_contrat_aide\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_stage_entreprise'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_stage_entreprise\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_duree_limite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_duree_limite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_sans_duree_limite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_sans_duree_limite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_independant'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_independant\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_employeur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_employeur\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_aides_familiaux'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_aides_familiaux\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_emploi_sans_objet'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_emploi_sans_objet\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_EMPLM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('RECHM' as TEXT) as \"champs\",\n      cast(  \n           \"RECHM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_pas_de_recherche_emploi'  , \n        \n            'menages_pr_recherche_emploi_moins_un_an'  , \n        \n            'menages_pr_recherche_emploi_plus_un_an'  , \n        \n            'menages_pr_recherche_emploi_non_declaree'  , \n        \n            'menages_pr_recherche_emploi_sans_objet_en_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_pas_de_recherche_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_pas_de_recherche_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_moins_un_an'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_moins_un_an\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_plus_un_an'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_plus_un_an\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_non_declaree'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_non_declaree\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_recherche_emploi_sans_objet_en_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_recherche_emploi_sans_objet_en_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_RECHM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TACTM' as TEXT) as \"champs\",\n      cast(  \n           \"TACTM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_activite_emploi'  , \n        \n            'menages_pr_activite_chomeurs'  , \n        \n            'menages_pr_activite_retraite_pre_retraite'  , \n        \n            'menages_pr_activite_eleve'  , \n        \n            'menages_pr_activite_au_foyer'  , \n        \n            'menages_pr_activite_autre' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_emploi\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_chomeurs'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_chomeurs\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_retraite_pre_retraite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_retraite_pre_retraite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_eleve'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_eleve\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_au_foyer'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_au_foyer\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_activite_autre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_activite_autre\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_TACTM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPSM' as TEXT) as \"champs\",\n      cast(  \n           \"INPSM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"activite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_scolarisee'  , \n        \n            'menages_avec_1_personne_scolarisee'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees'  , \n        \n            'menages_avec_2_et_plus_personnes_scolarisees' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_scolarisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_scolarisee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_scolarisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_scolarisee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_scolarisees'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_scolarisees\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPSM_par_geo\n      USING (code_iris)\n\n    \n\n  )\n\nselect * from aggregated\n\n), \naggregated_with_infos_iris as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_iris\" as infos_iris\n    ON\n      aggregated.code_iris = infos_iris.code_iris_2024\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_iris", "relation_name": "\"defaultdb\".\"prepare\".\"activite_iris\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:40.731210Z", "completed_at": "2024-10-23T16:56:44.668186Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:44.669427Z", "completed_at": "2024-10-23T16:56:44.669434Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.03153395652771, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.demographie_communes", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_commune_insee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n    GROUP BY\n      code_commune_insee\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_commune_insee,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP15M' as TEXT) as \"champs\",\n      cast(  \n           \"INP15M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_15_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_15_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_15_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP15M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPER1' as TEXT) as \"champs\",\n      cast(  \n           \"INPER1\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_masculin'  , \n        \n            'menages_avec_1_personne_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_masculin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_masculin\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_masculin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_masculin\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_masculin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_masculin\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPER1_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SEXEM' as TEXT) as \"champs\",\n      cast(  \n           \"SEXEM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_homme'  , \n        \n            'menages_pr_femmes' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_homme'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_homme\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_femmes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_femmes\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_SEXEM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPER2' as TEXT) as \"champs\",\n      cast(  \n           \"INPER2\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_feminin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_feminin\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_feminin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_feminin\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPER2_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP3M' as TEXT) as \"champs\",\n      cast(  \n           \"INP3M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_3_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_3_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_3_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP3M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP65M' as TEXT) as \"champs\",\n      cast(  \n           \"INP65M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_65_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_65_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_65_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP65M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP11M' as TEXT) as \"champs\",\n      cast(  \n           \"INP11M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_11_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_11_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_11_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP11M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPER' as TEXT) as \"champs\",\n      cast(  \n           \"INPER\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_1_personne'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_2_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_3_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_4_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_5_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_6_et_plus_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_6_et_plus_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_3_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_3_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_4_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_4_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_5_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_5_personnes\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPER_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP24M' as TEXT) as \"champs\",\n      cast(  \n           \"INP24M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_24_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_24_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_24_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP24M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP60M' as TEXT) as \"champs\",\n      cast(  \n           \"INP60M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_60_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_60_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_60_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP60M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP19M' as TEXT) as \"champs\",\n      cast(  \n           \"INP19M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_19_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_19_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_19_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP19M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP75M' as TEXT) as \"champs\",\n      cast(  \n           \"INP75M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_75_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_75_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_75_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP75M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP17M' as TEXT) as \"champs\",\n      cast(  \n           \"INP17M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_17_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_17_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_17_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP17M_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('STAT_CONJM' as TEXT) as \"champs\",\n      cast(  \n           \"STAT_CONJM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_mariee'  , \n        \n            'menages_pr_pacsee'  , \n        \n            'menages_pr_concubinage_union_libre'  , \n        \n            'menages_pr_veuve'  , \n        \n            'menages_pr_divorcee'  , \n        \n            'menages_pr_celibataire' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_mariee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_mariee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_pacsee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_pacsee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_concubinage_union_libre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_concubinage_union_libre\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_veuve'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_veuve\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_divorcee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_divorcee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_celibataire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_celibataire\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_STAT_CONJM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP5M' as TEXT) as \"champs\",\n      cast(  \n           \"INP5M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_5_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_5_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_5_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP5M_par_geo\n      USING (code_commune_insee)\n\n    \n\n  )\n\nselect * from aggregated\n\n),\n\naggregated_with_infos_communes as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes\n    ON\n      aggregated.code_commune_insee = infos_communes.code_commune\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_communes", "relation_name": "\"defaultdb\".\"prepare\".\"demographie_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:44.764186Z", "completed_at": "2024-10-23T16:56:48.805222Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:48.806434Z", "completed_at": "2024-10-23T16:56:48.806441Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.1378419399261475, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.demographie_iris", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_iris,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n    GROUP BY\n      code_iris\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_iris,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP15M' as TEXT) as \"champs\",\n      cast(  \n           \"INP15M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_15_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_15_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_15_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_15_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_15_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP15M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPER1' as TEXT) as \"champs\",\n      cast(  \n           \"INPER1\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_masculin'  , \n        \n            'menages_avec_1_personne_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin'  , \n        \n            'menages_avec_2_et_plus_personnes_masculin' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_masculin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_masculin\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_masculin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_masculin\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_et_plus_personnes_masculin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_et_plus_personnes_masculin\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPER1_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SEXEM' as TEXT) as \"champs\",\n      cast(  \n           \"SEXEM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_homme'  , \n        \n            'menages_pr_femmes' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_homme'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_homme\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_femmes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_femmes\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_SEXEM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPER2' as TEXT) as \"champs\",\n      cast(  \n           \"INPER2\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin'  , \n        \n            'menages_avec_1_personne_feminin' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_feminin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_feminin\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne_feminin'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne_feminin\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPER2_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP3M' as TEXT) as \"champs\",\n      cast(  \n           \"INP3M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_3_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_3_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_3_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_3_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_3_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP3M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP65M' as TEXT) as \"champs\",\n      cast(  \n           \"INP65M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_65_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_65_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_65_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_65_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_65_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP65M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP11M' as TEXT) as \"champs\",\n      cast(  \n           \"INP11M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_11_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_11_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_11_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_11_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_11_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP11M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INPER' as TEXT) as \"champs\",\n      cast(  \n           \"INPER\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_1_personne'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_2_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_3_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_4_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_5_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes'  , \n        \n            'menages_avec_6_et_plus_personnes' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_personne'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_personne\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_6_et_plus_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_6_et_plus_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_2_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_2_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_3_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_3_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_4_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_4_personnes\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_5_personnes'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_5_personnes\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INPER_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP24M' as TEXT) as \"champs\",\n      cast(  \n           \"INP24M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_24_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_24_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_24_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_24_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_24_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP24M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP60M' as TEXT) as \"champs\",\n      cast(  \n           \"INP60M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_60_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_60_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_60_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_60_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_60_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP60M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP19M' as TEXT) as \"champs\",\n      cast(  \n           \"INP19M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_19_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_19_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_19_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_19_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_19_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP19M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP75M' as TEXT) as \"champs\",\n      cast(  \n           \"INP75M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus'  , \n        \n            'menages_avec_1_et_plus_personnes_75_ans_et_plus' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_75_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_75_ans_et_plus\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_75_ans_et_plus'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_75_ans_et_plus\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP75M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP17M' as TEXT) as \"champs\",\n      cast(  \n           \"INP17M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_17_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_17_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_17_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_17_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_17_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP17M_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('STAT_CONJM' as TEXT) as \"champs\",\n      cast(  \n           \"STAT_CONJM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_mariee'  , \n        \n            'menages_pr_pacsee'  , \n        \n            'menages_pr_concubinage_union_libre'  , \n        \n            'menages_pr_veuve'  , \n        \n            'menages_pr_divorcee'  , \n        \n            'menages_pr_celibataire' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_mariee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_mariee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_pacsee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_pacsee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_concubinage_union_libre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_concubinage_union_libre\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_veuve'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_veuve\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_divorcee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_divorcee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_celibataire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_celibataire\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_STAT_CONJM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INP5M' as TEXT) as \"champs\",\n      cast(  \n           \"INP5M\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"demographie_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_0_personne_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins'  , \n        \n            'menages_avec_1_et_plus_personnes_5_ans_et_moins' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_0_personne_5_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_0_personne_5_ans_et_moins\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_1_et_plus_personnes_5_ans_et_moins'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_1_et_plus_personnes_5_ans_et_moins\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INP5M_par_geo\n      USING (code_iris)\n\n    \n\n  )\n\nselect * from aggregated\n\n), \naggregated_with_infos_iris as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_iris\" as infos_iris\n    ON\n      aggregated.code_iris = infos_iris.code_iris_2024\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_iris", "relation_name": "\"defaultdb\".\"prepare\".\"demographie_iris\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:48.903573Z", "completed_at": "2024-10-23T16:56:54.951292Z"}, {"name": "execute", "started_at": "2024-10-23T16:56:54.952503Z", "completed_at": "2024-10-23T16:56:54.952510Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 6.1455912590026855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.habitat_communes", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n  -- depends_on: \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_commune_insee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n    GROUP BY\n      code_commune_insee\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_commune_insee,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('AEMMR' as TEXT) as \"champs\",\n      cast(  \n           \"AEMMR\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'emmenagement_1900_1919'  , \n        \n            'emmenagement_1920_1939'  , \n        \n            'emmenagement_1940_1959'  , \n        \n            'emmenagement_1940_1969'  , \n        \n            'emmenagement_1970_1979'  , \n        \n            'emmenagement_1980_1989'  , \n        \n            'emmenagement_1990_1999'  , \n        \n            'emmenagement_apres_1999' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1900_1919'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1900_1919\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1920_1939'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1920_1939\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1940_1959'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1940_1959\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1940_1969'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1940_1969\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1970_1979'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1970_1979\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1980_1989'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1980_1989\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1990_1999'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1990_1999\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_apres_1999'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_apres_1999\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_AEMMR_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ACHL' as TEXT) as \"champs\",\n      cast(  \n           \"ACHL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'construction_avant_1919'  , \n        \n            'construction_1919_1945'  , \n        \n            'construction_1916_1970'  , \n        \n            'construction_1971_1990'  , \n        \n            'construction_1991_2025'  , \n        \n            'construction_2006'  , \n        \n            'construction_2007'  , \n        \n            'construction_2008'  , \n        \n            'construction_2009'  , \n        \n            'construction_2010'  , \n        \n            'construction_2011'  , \n        \n            'construction_2012'  , \n        \n            'construction_2013'  , \n        \n            'construction_2014'  , \n        \n            'construction_2015'  , \n        \n            'construction_2016'  , \n        \n            'construction_2017'  , \n        \n            'construction_2018'  , \n        \n            'construction_2019'  , \n        \n            'construction_2020'  , \n        \n            'construction_2021'  , \n        \n            'construction_2022' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'construction_avant_1919'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_avant_1919\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1919_1945'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1919_1945\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1916_1970'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1916_1970\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1971_1990'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1971_1990\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1991_2025'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1991_2025\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2006'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2006\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2007'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2007\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2008'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2008\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2009'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2009\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2010'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2010\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2011'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2011\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2012'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2012\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2013'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2013\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2014'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2014\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2015'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2015\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2016'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2016\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2017'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2017\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2018'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2018\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2019'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2019\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2020'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2020\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2021'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2021\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2022'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2022\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_ACHL_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('STOCD' as TEXT) as \"champs\",\n      cast(  \n           \"STOCD\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logements_occupes_par_proprietaires'  , \n        \n            'logements_occupes_par_locataire_sous_locataire_vide_non_hlm'  , \n        \n            'logements_occupes_par_locataire_sous_locataire_vide_hlm'  , \n        \n            'logements_occupes_par_locataire_meuble_hotel'  , \n        \n            'logements_occupes_par_loge_gratuitemenent' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_proprietaires'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_proprietaires\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_locataire_sous_locataire_vide_non_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_locataire_sous_locataire_vide_non_hlm\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_locataire_sous_locataire_vide_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_locataire_sous_locataire_vide_hlm\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_locataire_meuble_hotel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_locataire_meuble_hotel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_loge_gratuitemenent'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_loge_gratuitemenent\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_STOCD_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('AGEMEN8' as TEXT) as \"champs\",\n      cast(  \n           \"AGEMEN8\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_moins_15'  , \n        \n            'pr_15_19'  , \n        \n            'pr_20_24'  , \n        \n            'pr_25_39'  , \n        \n            'pr_40_54'  , \n        \n            'pr_55_64'  , \n        \n            'pr_64_79'  , \n        \n            'pr_plus_80' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_moins_15'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_moins_15\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_15_19'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_15_19\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_20_24'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_20_24\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_25_39'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_25_39\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_40_54'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_40_54\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_55_64'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_55_64\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_64_79'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_64_79\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_plus_80'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_plus_80\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_AGEMEN8_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TYPC' as TEXT) as \"champs\",\n      cast(  \n           \"TYPC\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logement_type_contruction_un_logement_isole'  , \n        \n            'logement_type_contruction_un_logement_groupe'  , \n        \n            'logement_type_contruction_plusieurs_logements'  , \n        \n            'logement_type_contruction_autre_logement'  , \n        \n            'logement_type_construction_provisoire' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_un_logement_isole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_un_logement_isole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_un_logement_groupe'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_un_logement_groupe\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_plusieurs_logements'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_plusieurs_logements\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_autre_logement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_autre_logement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_construction_provisoire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_construction_provisoire\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_TYPC_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CMBL' as TEXT) as \"champs\",\n      cast(  \n           \"CMBL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'metro__combustible_chauffage_urbain'  , \n        \n            'metro__combustible_gaz_de_ville_ou_reseau'  , \n        \n            'metro__combustible_fioul'  , \n        \n            'metro__combustible_electricte'  , \n        \n            'metro__combustible_gaz_bouteille_ou_citerne'  , \n        \n            'metro__combustible_autre' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_chauffage_urbain'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_chauffage_urbain\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_gaz_de_ville_ou_reseau'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_gaz_de_ville_ou_reseau\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_fioul'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_fioul\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_electricte'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_electricte\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_gaz_bouteille_ou_citerne'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_gaz_bouteille_ou_citerne\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_autre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_autre\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_CMBL_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CLIM' as TEXT) as \"champs\",\n      cast(  \n           \"CLIM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__avec_piece_climatisee'  , \n        \n            'dom__sans_piece_climatisee' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__avec_piece_climatisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__avec_piece_climatisee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__sans_piece_climatisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__sans_piece_climatisee\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_CLIM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ANEMR' as TEXT) as \"champs\",\n      cast(  \n           \"ANEMR\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'emmenagement_moins_2_ans'  , \n        \n            'emmenagement_2_4_ans'  , \n        \n            'emmenagement_5_9_ans'  , \n        \n            'emmenagement_10_19_ans'  , \n        \n            'emmenagement_20_29_ans'  , \n        \n            'emmenagement_30_39_ans'  , \n        \n            'emmenagement_40_49_ans'  , \n        \n            'emmenagement_50_59_ans'  , \n        \n            'emmenagement_60_69_ans'  , \n        \n            'emmenagement_plus_70_ans' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_moins_2_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_moins_2_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_2_4_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_2_4_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_5_9_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_5_9_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_10_19_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_10_19_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_20_29_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_20_29_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_30_39_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_30_39_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_40_49_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_40_49_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_50_59_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_50_59_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_60_69_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_60_69_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_plus_70_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_plus_70_ans\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_ANEMR_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('EGOUL' as TEXT) as \"champs\",\n      cast(  \n           \"EGOUL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__raccordement_egouts'  , \n        \n            'dom__raccordement_fosse_septique'  , \n        \n            'dom__raccordement_puisard'  , \n        \n            'dom__evacuation_sol' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__raccordement_egouts'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__raccordement_egouts\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__raccordement_fosse_septique'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__raccordement_fosse_septique\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__raccordement_puisard'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__raccordement_puisard\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__evacuation_sol'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__evacuation_sol\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_EGOUL_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('GARL' as TEXT) as \"champs\",\n      cast(  \n           \"GARL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'avec_emplacement_stationnement'  , \n        \n            'sans_emplacement_stationnement' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'avec_emplacement_stationnement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"avec_emplacement_stationnement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'sans_emplacement_stationnement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"sans_emplacement_stationnement\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_GARL_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CUIS' as TEXT) as \"champs\",\n      cast(  \n           \"CUIS\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__avec_cuisine_interieure_evier'  , \n        \n            'dom__sans_cuisine_interieure_evier' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__avec_cuisine_interieure_evier'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__avec_cuisine_interieure_evier\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__sans_cuisine_interieure_evier'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__sans_cuisine_interieure_evier\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_CUIS_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('NBPI' as TEXT) as \"champs\",\n      cast(  \n           \"NBPI\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logements_avec_1_piece'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_2_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_3_pieces'  , \n        \n            'logements_avec_4_pieces'  , \n        \n            'logements_avec_5_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_1_piece'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_1_piece\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_6_et_plus_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_6_et_plus_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_2_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_2_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_3_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_3_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_4_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_4_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_5_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_5_pieces\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_NBPI_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SURF' as TEXT) as \"champs\",\n      cast(  \n           \"SURF\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logements_moins_30_mc'  , \n        \n            'logements_30_40_mc'  , \n        \n            'logements_40_60_mc'  , \n        \n            'logements_60_80_mc'  , \n        \n            'logements_80_100_mc'  , \n        \n            'logements_100_120_mc'  , \n        \n            'logements_plus_120_mc' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logements_moins_30_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_moins_30_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_30_40_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_30_40_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_40_60_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_40_60_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_60_80_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_60_80_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_80_100_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_80_100_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_100_120_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_100_120_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_plus_120_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_plus_120_mc\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_SURF_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SANIDOM' as TEXT) as \"champs\",\n      cast(  \n           \"SANIDOM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__logement_avec_baignoire_ou_douche_avec_toilettes_interieures'  , \n        \n            'dom__logement_avec_baignoire_ou_douche_sans_toilettes_interieures'  , \n        \n            'dom__logement_ni_baignoire_ni_douche_avec_toilettes_interieures'  , \n        \n            'dom__logement_ni_baignoire_ni_douche' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_avec_baignoire_ou_douche_avec_toilettes_interieures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_avec_baignoire_ou_douche_avec_toilettes_interieures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_avec_baignoire_ou_douche_sans_toilettes_interieures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_avec_baignoire_ou_douche_sans_toilettes_interieures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_ni_baignoire_ni_douche_avec_toilettes_interieures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_ni_baignoire_ni_douche_avec_toilettes_interieures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_ni_baignoire_ni_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_ni_baignoire_ni_douche\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_SANIDOM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('BATI' as TEXT) as \"champs\",\n      cast(  \n           \"BATI\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__habitation_de_fortune'  , \n        \n            'dom__cases_traditionnelles'  , \n        \n            'dom__habitation_en_bois'  , \n        \n            'dom__habitation_en_dur' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__habitation_de_fortune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__habitation_de_fortune\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__cases_traditionnelles'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__cases_traditionnelles\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__habitation_en_bois'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__habitation_en_bois\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__habitation_en_dur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__habitation_en_dur\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_BATI_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CHAU' as TEXT) as \"champs\",\n      cast(  \n           \"CHAU\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__presence_chauffage'  , \n        \n            'dom__abscence_chauffage' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__presence_chauffage'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__presence_chauffage\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__abscence_chauffage'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__abscence_chauffage\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_CHAU_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CHOS' as TEXT) as \"champs\",\n      cast(  \n           \"CHOS\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__presence_chauffe_eau_solaire'  , \n        \n            'dom__abscence_chauffe_eau_solaire' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__presence_chauffe_eau_solaire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__presence_chauffe_eau_solaire\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__abscence_chauffe_eau_solaire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__abscence_chauffe_eau_solaire\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_CHOS_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('HLML' as TEXT) as \"champs\",\n      cast(  \n           \"HLML\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'appartient_hlm'  , \n        \n            'appartient_pas_hlm' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'appartient_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"appartient_hlm\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'appartient_pas_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"appartient_pas_hlm\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_HLML_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TYPL' as TEXT) as \"champs\",\n      cast(  \n           \"TYPL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logement_type_maison'  , \n        \n            'logement_type_appartement'  , \n        \n            'logement_type_appartement_foyer'  , \n        \n            'logement_type_chambre_hotel'  , \n        \n            'logement_type_habitation_fortune'  , \n        \n            'logement_type_piece_independante' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_maison'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_maison\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_appartement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_appartement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_appartement_foyer'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_appartement_foyer\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_chambre_hotel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_chambre_hotel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_habitation_fortune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_habitation_fortune\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_piece_independante'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_piece_independante\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_TYPL_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('WC' as TEXT) as \"champs\",\n      cast(  \n           \"WC\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__logements_avec_wc_interieurs'  , \n        \n            'dom__logements_sans_wc_interieurs' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__logements_avec_wc_interieurs'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logements_avec_wc_interieurs\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logements_sans_wc_interieurs'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logements_sans_wc_interieurs\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_WC_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SANI' as TEXT) as \"champs\",\n      cast(  \n           \"SANI\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'metro__logement_ni_baignoire_ni_douche'  , \n        \n            'metro__logement_avec_baignoire_ou_douche_hors_piece_reservee'  , \n        \n            'metro__logement_salle_de_bain' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'metro__logement_ni_baignoire_ni_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__logement_ni_baignoire_ni_douche\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__logement_avec_baignoire_ou_douche_hors_piece_reservee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__logement_avec_baignoire_ou_douche_hors_piece_reservee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__logement_salle_de_bain'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__logement_salle_de_bain\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_SANI_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('BAIN' as TEXT) as \"champs\",\n      cast(  \n           \"BAIN\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__beignoire_ou_douche'  , \n        \n            'dom__ni_beignoire_ni_douche' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__beignoire_ou_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__beignoire_ou_douche\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__ni_beignoire_ni_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__ni_beignoire_ni_douche\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_BAIN_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ASCEN' as TEXT) as \"champs\",\n      cast(  \n           \"ASCEN\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'avec_ascensseur'  , \n        \n            'sans_ascensseur' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'avec_ascensseur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"avec_ascensseur\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'sans_ascensseur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"sans_ascensseur\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_ASCEN_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ELEC' as TEXT) as \"champs\",\n      cast(  \n           \"ELEC\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__avec_electricite'  , \n        \n            'dom__sans_electricite' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__avec_electricite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__avec_electricite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__sans_electricite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__sans_electricite\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_ELEC_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('EAU' as TEXT) as \"champs\",\n      cast(  \n           \"EAU\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__eau_froide_seulement'  , \n        \n            'dom__eau_froide_et_chaude'  , \n        \n            'dom__aucun_point_eau' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__eau_froide_seulement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__eau_froide_seulement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__eau_froide_et_chaude'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__eau_froide_et_chaude\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__aucun_point_eau'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__aucun_point_eau\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_EAU_par_geo\n      USING (code_commune_insee)\n\n    \n\n  )\n\nselect * from aggregated\n\n),\n  aggregated_with_infos_communes as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes\n    ON\n      aggregated.code_commune_insee = infos_communes.code_commune\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_communes", "relation_name": "\"defaultdb\".\"prepare\".\"habitat_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:56:55.050785Z", "completed_at": "2024-10-23T16:57:01.044781Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:01.046065Z", "completed_at": "2024-10-23T16:57:01.046071Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 6.091122150421143, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.habitat_iris", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_iris,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n    GROUP BY\n      code_iris\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_iris,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('AEMMR' as TEXT) as \"champs\",\n      cast(  \n           \"AEMMR\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'emmenagement_1900_1919'  , \n        \n            'emmenagement_1920_1939'  , \n        \n            'emmenagement_1940_1959'  , \n        \n            'emmenagement_1940_1969'  , \n        \n            'emmenagement_1970_1979'  , \n        \n            'emmenagement_1980_1989'  , \n        \n            'emmenagement_1990_1999'  , \n        \n            'emmenagement_apres_1999' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1900_1919'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1900_1919\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1920_1939'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1920_1939\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1940_1959'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1940_1959\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1940_1969'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1940_1969\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1970_1979'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1970_1979\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1980_1989'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1980_1989\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_1990_1999'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_1990_1999\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_apres_1999'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_apres_1999\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_AEMMR_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ACHL' as TEXT) as \"champs\",\n      cast(  \n           \"ACHL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'construction_avant_1919'  , \n        \n            'construction_1919_1945'  , \n        \n            'construction_1916_1970'  , \n        \n            'construction_1971_1990'  , \n        \n            'construction_1991_2025'  , \n        \n            'construction_2006'  , \n        \n            'construction_2007'  , \n        \n            'construction_2008'  , \n        \n            'construction_2009'  , \n        \n            'construction_2010'  , \n        \n            'construction_2011'  , \n        \n            'construction_2012'  , \n        \n            'construction_2013'  , \n        \n            'construction_2014'  , \n        \n            'construction_2015'  , \n        \n            'construction_2016'  , \n        \n            'construction_2017'  , \n        \n            'construction_2018'  , \n        \n            'construction_2019'  , \n        \n            'construction_2020'  , \n        \n            'construction_2021'  , \n        \n            'construction_2022' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'construction_avant_1919'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_avant_1919\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1919_1945'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1919_1945\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1916_1970'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1916_1970\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1971_1990'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1971_1990\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_1991_2025'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_1991_2025\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2006'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2006\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2007'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2007\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2008'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2008\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2009'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2009\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2010'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2010\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2011'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2011\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2012'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2012\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2013'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2013\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2014'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2014\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2015'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2015\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2016'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2016\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2017'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2017\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2018'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2018\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2019'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2019\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2020'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2020\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2021'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2021\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'construction_2022'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"construction_2022\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_ACHL_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('STOCD' as TEXT) as \"champs\",\n      cast(  \n           \"STOCD\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logements_occupes_par_proprietaires'  , \n        \n            'logements_occupes_par_locataire_sous_locataire_vide_non_hlm'  , \n        \n            'logements_occupes_par_locataire_sous_locataire_vide_hlm'  , \n        \n            'logements_occupes_par_locataire_meuble_hotel'  , \n        \n            'logements_occupes_par_loge_gratuitemenent' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_proprietaires'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_proprietaires\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_locataire_sous_locataire_vide_non_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_locataire_sous_locataire_vide_non_hlm\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_locataire_sous_locataire_vide_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_locataire_sous_locataire_vide_hlm\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_locataire_meuble_hotel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_locataire_meuble_hotel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_occupes_par_loge_gratuitemenent'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_occupes_par_loge_gratuitemenent\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_STOCD_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('AGEMEN8' as TEXT) as \"champs\",\n      cast(  \n           \"AGEMEN8\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_moins_15'  , \n        \n            'pr_15_19'  , \n        \n            'pr_20_24'  , \n        \n            'pr_25_39'  , \n        \n            'pr_40_54'  , \n        \n            'pr_55_64'  , \n        \n            'pr_64_79'  , \n        \n            'pr_plus_80' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_moins_15'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_moins_15\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_15_19'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_15_19\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_20_24'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_20_24\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_25_39'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_25_39\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_40_54'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_40_54\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_55_64'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_55_64\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_64_79'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_64_79\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_plus_80'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_plus_80\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_AGEMEN8_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TYPC' as TEXT) as \"champs\",\n      cast(  \n           \"TYPC\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logement_type_contruction_un_logement_isole'  , \n        \n            'logement_type_contruction_un_logement_groupe'  , \n        \n            'logement_type_contruction_plusieurs_logements'  , \n        \n            'logement_type_contruction_autre_logement'  , \n        \n            'logement_type_construction_provisoire' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_un_logement_isole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_un_logement_isole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_un_logement_groupe'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_un_logement_groupe\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_plusieurs_logements'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_plusieurs_logements\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_contruction_autre_logement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_contruction_autre_logement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_construction_provisoire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_construction_provisoire\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_TYPC_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CMBL' as TEXT) as \"champs\",\n      cast(  \n           \"CMBL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'metro__combustible_chauffage_urbain'  , \n        \n            'metro__combustible_gaz_de_ville_ou_reseau'  , \n        \n            'metro__combustible_fioul'  , \n        \n            'metro__combustible_electricte'  , \n        \n            'metro__combustible_gaz_bouteille_ou_citerne'  , \n        \n            'metro__combustible_autre' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_chauffage_urbain'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_chauffage_urbain\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_gaz_de_ville_ou_reseau'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_gaz_de_ville_ou_reseau\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_fioul'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_fioul\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_electricte'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_electricte\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_gaz_bouteille_ou_citerne'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_gaz_bouteille_ou_citerne\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__combustible_autre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__combustible_autre\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_CMBL_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CLIM' as TEXT) as \"champs\",\n      cast(  \n           \"CLIM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__avec_piece_climatisee'  , \n        \n            'dom__sans_piece_climatisee' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__avec_piece_climatisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__avec_piece_climatisee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__sans_piece_climatisee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__sans_piece_climatisee\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_CLIM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ANEMR' as TEXT) as \"champs\",\n      cast(  \n           \"ANEMR\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'emmenagement_moins_2_ans'  , \n        \n            'emmenagement_2_4_ans'  , \n        \n            'emmenagement_5_9_ans'  , \n        \n            'emmenagement_10_19_ans'  , \n        \n            'emmenagement_20_29_ans'  , \n        \n            'emmenagement_30_39_ans'  , \n        \n            'emmenagement_40_49_ans'  , \n        \n            'emmenagement_50_59_ans'  , \n        \n            'emmenagement_60_69_ans'  , \n        \n            'emmenagement_plus_70_ans' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_moins_2_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_moins_2_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_2_4_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_2_4_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_5_9_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_5_9_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_10_19_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_10_19_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_20_29_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_20_29_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_30_39_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_30_39_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_40_49_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_40_49_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_50_59_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_50_59_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_60_69_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_60_69_ans\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'emmenagement_plus_70_ans'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"emmenagement_plus_70_ans\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_ANEMR_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('EGOUL' as TEXT) as \"champs\",\n      cast(  \n           \"EGOUL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__raccordement_egouts'  , \n        \n            'dom__raccordement_fosse_septique'  , \n        \n            'dom__raccordement_puisard'  , \n        \n            'dom__evacuation_sol' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__raccordement_egouts'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__raccordement_egouts\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__raccordement_fosse_septique'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__raccordement_fosse_septique\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__raccordement_puisard'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__raccordement_puisard\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__evacuation_sol'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__evacuation_sol\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_EGOUL_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('GARL' as TEXT) as \"champs\",\n      cast(  \n           \"GARL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'avec_emplacement_stationnement'  , \n        \n            'sans_emplacement_stationnement' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'avec_emplacement_stationnement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"avec_emplacement_stationnement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'sans_emplacement_stationnement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"sans_emplacement_stationnement\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_GARL_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CUIS' as TEXT) as \"champs\",\n      cast(  \n           \"CUIS\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__avec_cuisine_interieure_evier'  , \n        \n            'dom__sans_cuisine_interieure_evier' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__avec_cuisine_interieure_evier'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__avec_cuisine_interieure_evier\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__sans_cuisine_interieure_evier'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__sans_cuisine_interieure_evier\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_CUIS_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('NBPI' as TEXT) as \"champs\",\n      cast(  \n           \"NBPI\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logements_avec_1_piece'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_2_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_3_pieces'  , \n        \n            'logements_avec_4_pieces'  , \n        \n            'logements_avec_5_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces'  , \n        \n            'logements_avec_6_et_plus_pieces' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n        \n            \n        \n      \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n      \n        \n      \n        \n      \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_1_piece'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_1_piece\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_6_et_plus_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_6_et_plus_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_2_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_2_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_3_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_3_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_4_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_4_pieces\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_avec_5_pieces'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_avec_5_pieces\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_NBPI_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SURF' as TEXT) as \"champs\",\n      cast(  \n           \"SURF\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logements_moins_30_mc'  , \n        \n            'logements_30_40_mc'  , \n        \n            'logements_40_60_mc'  , \n        \n            'logements_60_80_mc'  , \n        \n            'logements_80_100_mc'  , \n        \n            'logements_100_120_mc'  , \n        \n            'logements_plus_120_mc' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logements_moins_30_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_moins_30_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_30_40_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_30_40_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_40_60_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_40_60_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_60_80_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_60_80_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_80_100_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_80_100_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_100_120_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_100_120_mc\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logements_plus_120_mc'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logements_plus_120_mc\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_SURF_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SANIDOM' as TEXT) as \"champs\",\n      cast(  \n           \"SANIDOM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__logement_avec_baignoire_ou_douche_avec_toilettes_interieures'  , \n        \n            'dom__logement_avec_baignoire_ou_douche_sans_toilettes_interieures'  , \n        \n            'dom__logement_ni_baignoire_ni_douche_avec_toilettes_interieures'  , \n        \n            'dom__logement_ni_baignoire_ni_douche' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_avec_baignoire_ou_douche_avec_toilettes_interieures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_avec_baignoire_ou_douche_avec_toilettes_interieures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_avec_baignoire_ou_douche_sans_toilettes_interieures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_avec_baignoire_ou_douche_sans_toilettes_interieures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_ni_baignoire_ni_douche_avec_toilettes_interieures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_ni_baignoire_ni_douche_avec_toilettes_interieures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logement_ni_baignoire_ni_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logement_ni_baignoire_ni_douche\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_SANIDOM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('BATI' as TEXT) as \"champs\",\n      cast(  \n           \"BATI\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__habitation_de_fortune'  , \n        \n            'dom__cases_traditionnelles'  , \n        \n            'dom__habitation_en_bois'  , \n        \n            'dom__habitation_en_dur' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__habitation_de_fortune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__habitation_de_fortune\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__cases_traditionnelles'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__cases_traditionnelles\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__habitation_en_bois'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__habitation_en_bois\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__habitation_en_dur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__habitation_en_dur\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_BATI_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CHAU' as TEXT) as \"champs\",\n      cast(  \n           \"CHAU\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__presence_chauffage'  , \n        \n            'dom__abscence_chauffage' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__presence_chauffage'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__presence_chauffage\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__abscence_chauffage'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__abscence_chauffage\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_CHAU_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CHOS' as TEXT) as \"champs\",\n      cast(  \n           \"CHOS\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__presence_chauffe_eau_solaire'  , \n        \n            'dom__abscence_chauffe_eau_solaire' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__presence_chauffe_eau_solaire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__presence_chauffe_eau_solaire\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__abscence_chauffe_eau_solaire'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__abscence_chauffe_eau_solaire\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_CHOS_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('HLML' as TEXT) as \"champs\",\n      cast(  \n           \"HLML\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'appartient_hlm'  , \n        \n            'appartient_pas_hlm' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'appartient_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"appartient_hlm\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'appartient_pas_hlm'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"appartient_pas_hlm\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_HLML_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TYPL' as TEXT) as \"champs\",\n      cast(  \n           \"TYPL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'logement_type_maison'  , \n        \n            'logement_type_appartement'  , \n        \n            'logement_type_appartement_foyer'  , \n        \n            'logement_type_chambre_hotel'  , \n        \n            'logement_type_habitation_fortune'  , \n        \n            'logement_type_piece_independante' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_maison'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_maison\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_appartement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_appartement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_appartement_foyer'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_appartement_foyer\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_chambre_hotel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_chambre_hotel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_habitation_fortune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_habitation_fortune\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'logement_type_piece_independante'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"logement_type_piece_independante\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_TYPL_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('WC' as TEXT) as \"champs\",\n      cast(  \n           \"WC\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__logements_avec_wc_interieurs'  , \n        \n            'dom__logements_sans_wc_interieurs' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__logements_avec_wc_interieurs'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logements_avec_wc_interieurs\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__logements_sans_wc_interieurs'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__logements_sans_wc_interieurs\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_WC_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('SANI' as TEXT) as \"champs\",\n      cast(  \n           \"SANI\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'metro__logement_ni_baignoire_ni_douche'  , \n        \n            'metro__logement_avec_baignoire_ou_douche_hors_piece_reservee'  , \n        \n            'metro__logement_salle_de_bain' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'metro__logement_ni_baignoire_ni_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__logement_ni_baignoire_ni_douche\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__logement_avec_baignoire_ou_douche_hors_piece_reservee'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__logement_avec_baignoire_ou_douche_hors_piece_reservee\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'metro__logement_salle_de_bain'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"metro__logement_salle_de_bain\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_SANI_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('BAIN' as TEXT) as \"champs\",\n      cast(  \n           \"BAIN\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__beignoire_ou_douche'  , \n        \n            'dom__ni_beignoire_ni_douche' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__beignoire_ou_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__beignoire_ou_douche\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__ni_beignoire_ni_douche'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__ni_beignoire_ni_douche\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_BAIN_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ASCEN' as TEXT) as \"champs\",\n      cast(  \n           \"ASCEN\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'avec_ascensseur'  , \n        \n            'sans_ascensseur' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'avec_ascensseur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"avec_ascensseur\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'sans_ascensseur'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"sans_ascensseur\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_ASCEN_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ELEC' as TEXT) as \"champs\",\n      cast(  \n           \"ELEC\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__avec_electricite'  , \n        \n            'dom__sans_electricite' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__avec_electricite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__avec_electricite\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__sans_electricite'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__sans_electricite\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_ELEC_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('EAU' as TEXT) as \"champs\",\n      cast(  \n           \"EAU\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"habitat_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__eau_froide_seulement'  , \n        \n            'dom__eau_froide_et_chaude'  , \n        \n            'dom__aucun_point_eau' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__eau_froide_seulement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__eau_froide_seulement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__eau_froide_et_chaude'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__eau_froide_et_chaude\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__aucun_point_eau'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__aucun_point_eau\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_EAU_par_geo\n      USING (code_iris)\n\n    \n\n  )\n\nselect * from aggregated\n\n), \naggregated_with_infos_iris as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_iris\" as infos_iris\n    ON\n      aggregated.code_iris = infos_iris.code_iris_2024\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_iris", "relation_name": "\"defaultdb\".\"prepare\".\"habitat_iris\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:01.144198Z", "completed_at": "2024-10-23T16:57:03.791811Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:03.793062Z", "completed_at": "2024-10-23T16:57:03.793069Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.744992256164551, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.mobilite_communes", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_commune_insee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n    GROUP BY\n      code_commune_insee\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_commune_insee,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('IMMIM' as TEXT) as \"champs\",\n      cast(  \n           \"IMMIM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_immigration_immigre'  , \n        \n            'pr_immigration_non_immigre' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_immigration_immigre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_immigration_immigre\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_immigration_non_immigre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_immigration_non_immigre\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_IMMIM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ILETUDM' as TEXT) as \"champs\",\n      cast(  \n           \"ILETUDM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_etudes_commune_actuelle'  , \n        \n            'pr_etudes_commune_departement_actuel'  , \n        \n            'pr_etudes_department_region_actuel'  , \n        \n            'pr_etudes_hors_region_actuelle_metropole'  , \n        \n            'pr_etudes_hors_region_actuelle_dom'  , \n        \n            'pr_etudes_hors_region_actuelle_com'  , \n        \n            'pr_etudes_etranger'  , \n        \n            'pr_etudes_sans_objet_non_inscrit' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_commune_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_commune_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_commune_departement_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_commune_departement_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_department_region_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_department_region_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_hors_region_actuelle_metropole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_hors_region_actuelle_metropole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_hors_region_actuelle_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_hors_region_actuelle_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_hors_region_actuelle_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_hors_region_actuelle_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_etranger\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_sans_objet_non_inscrit'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_sans_objet_non_inscrit\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_ILETUDM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('VOIT' as TEXT) as \"champs\",\n      cast(  \n           \"VOIT\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_0_voiture'  , \n        \n            'menages_1_voiture'  , \n        \n            'menages_2_voitures'  , \n        \n            'menages_3_et_plus_voitures' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_0_voiture'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_0_voiture\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_1_voiture'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_1_voiture\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_2_voitures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_2_voitures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_3_et_plus_voitures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_3_et_plus_voitures\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_VOIT_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ILTM' as TEXT) as \"champs\",\n      cast(  \n           \"ILTM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_travail_commune_actuelle'  , \n        \n            'pr_travail_commune_departement_actuel'  , \n        \n            'pr_travail_department_region_actuel'  , \n        \n            'pr_travail_hors_region_actuelle_metropole'  , \n        \n            'pr_travail_hors_region_actuelle_dom'  , \n        \n            'pr_travail_hors_region_actuelle_com'  , \n        \n            'pr_travail_etranger'  , \n        \n            'pr_travail_sans_objet_sans_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_commune_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_commune_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_commune_departement_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_commune_departement_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_department_region_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_department_region_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_hors_region_actuelle_metropole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_hors_region_actuelle_metropole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_hors_region_actuelle_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_hors_region_actuelle_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_hors_region_actuelle_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_hors_region_actuelle_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_etranger\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_sans_objet_sans_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_sans_objet_sans_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_ILTM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TRANSM' as TEXT) as \"champs\",\n      cast(  \n           \"TRANSM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_transport_travail_pieds'  , \n        \n            'menages_pr_transport_travail_velo'  , \n        \n            'menages_pr_transport_travail_deux_roues'  , \n        \n            'menages_pr_transport_travail_voiture'  , \n        \n            'menages_pr_transport_travail_transport_commune' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_pieds'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_pieds\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_velo'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_velo\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_voiture'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_voiture\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_transport_commune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_transport_commune\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_TRANSM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('DEROU' as TEXT) as \"champs\",\n      cast(  \n           \"DEROU\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__aucun_deux_roues'  , \n        \n            'dom__un_deux_roues'  , \n        \n            'dom__deux_deux_roues'  , \n        \n            'dom__trois_ou_plus_deux_roues' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__aucun_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__aucun_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__un_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__un_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__deux_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__deux_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__trois_ou_plus_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__trois_ou_plus_deux_roues\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_DEROU_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('IRANM' as TEXT) as \"champs\",\n      cast(  \n           \"IRANM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_pr_annee_avant_meme_logement'  , \n        \n            'menages_avec_pr_annee_avant_meme_commune'  , \n        \n            'menages_avec_pr_annee_avant_meme_departement'  , \n        \n            'menages_avec_pr_annee_avant_meme_region'  , \n        \n            'menages_avec_pr_annee_avant_autre_region_metro'  , \n        \n            'menages_avec_pr_annee_avant_autre_region_dom'  , \n        \n            'menages_avec_pr_annee_avant_autre_region_com'  , \n        \n            'menages_avec_pr_annee_avant_union_europeenne'  , \n        \n            'menages_avec_pr_annee_avant_etranger' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_logement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_logement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_commune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_commune\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_departement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_departement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_region'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_region\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_autre_region_metro'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_autre_region_metro\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_autre_region_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_autre_region_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_autre_region_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_autre_region_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_union_europeenne'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_union_europeenne\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_etranger\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_IRANM_par_geo\n      USING (code_commune_insee)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INAIM' as TEXT) as \"champs\",\n      cast(  \n           \"INAIM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_commune_insee, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_naissance_department_actuelle'  , \n        \n            'pr_naissance_department_region_actuelle'  , \n        \n            'pr_naissance_hors_region_actuelle_metropole'  , \n        \n            'pr_naissance_hors_region_actuelle_dom'  , \n        \n            'pr_naissance_hors_region_actuelle_com'  , \n        \n            'pr_naissance_etranger' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_commune_insee,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_department_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_department_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_department_region_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_department_region_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_hors_region_actuelle_metropole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_hors_region_actuelle_metropole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_hors_region_actuelle_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_hors_region_actuelle_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_hors_region_actuelle_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_hors_region_actuelle_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_etranger\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_commune_insee\n\n\n)\n\nselect * from pivoted\n  ) as alias_INAIM_par_geo\n      USING (code_commune_insee)\n\n    \n\n  )\n\nselect * from aggregated\n\n),\naggregated_with_infos_communes as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_communes\" as infos_communes\n    ON\n      aggregated.code_commune_insee = infos_communes.code_commune\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_communes", "relation_name": "\"defaultdb\".\"prepare\".\"mobilite_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:03.890220Z", "completed_at": "2024-10-23T16:57:06.538148Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.539330Z", "completed_at": "2024-10-23T16:57:06.539337Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.7442917823791504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.mobilite_iris", "compiled": true, "compiled_code": "--- depends_on: \"defaultdb\".\"prepare\".\"logement_2020_valeurs\"\n\n--- Agr\u00e8ge les donn\u00e9es de la base logement par commune\n--- Colonne par colonne pour ne pas saturer la m\u00e9moire\n--- L'agr\u00e9gration est faite par univot/pivot.\n\n\n\n\nwith aggregated as (\n  \n\n\n\n\n\nwith poids_par_geo as (\n    SELECT\n      code_iris,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '1') AS nombre_de_menage_base_ou_logements_occupee,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '2') AS nombre_de_logements_occasionnels,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '3') AS nombre_de_logements_residences_secondaires,\n      SUM(poids_du_logement) FILTER (WHERE \"CATL\" = '4') AS nombre_de_logements_vacants,\n      SUM(poids_du_logement) AS nombre_de_logements_total_tous_status_occupation\n    FROM\n      \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n    GROUP BY\n      code_iris\n  ), \n  poids_par_geo_clean as (\n    SELECT  \n      code_iris,\n      CAST(COALESCE(nombre_de_menage_base_ou_logements_occupee, 0) AS INT) as nombre_de_menage_base_ou_logements_occupee,\n      CAST(COALESCE(nombre_de_logements_occasionnels, 0) AS INT) as nombre_de_logements_occasionnels,\n      CAST(COALESCE(nombre_de_logements_residences_secondaires, 0) AS INT) as nombre_de_logements_residences_secondaires,\n      CAST(COALESCE(nombre_de_logements_vacants, 0) AS INT) as nombre_de_logements_vacants,\n      CAST(COALESCE(nombre_de_logements_total_tous_status_occupation, 0) AS INT) as nombre_de_logements_total_tous_status_occupation\n    FROM\n      poids_par_geo\n\n  ),\n  aggregated as (\n\n    SELECT * \n\n    FROM poids_par_geo_clean\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('IMMIM' as TEXT) as \"champs\",\n      cast(  \n           \"IMMIM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_immigration_immigre'  , \n        \n            'pr_immigration_non_immigre' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_immigration_immigre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_immigration_immigre\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_immigration_non_immigre'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_immigration_non_immigre\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_IMMIM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ILETUDM' as TEXT) as \"champs\",\n      cast(  \n           \"ILETUDM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_etudes_commune_actuelle'  , \n        \n            'pr_etudes_commune_departement_actuel'  , \n        \n            'pr_etudes_department_region_actuel'  , \n        \n            'pr_etudes_hors_region_actuelle_metropole'  , \n        \n            'pr_etudes_hors_region_actuelle_dom'  , \n        \n            'pr_etudes_hors_region_actuelle_com'  , \n        \n            'pr_etudes_etranger'  , \n        \n            'pr_etudes_sans_objet_non_inscrit' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_commune_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_commune_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_commune_departement_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_commune_departement_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_department_region_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_department_region_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_hors_region_actuelle_metropole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_hors_region_actuelle_metropole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_hors_region_actuelle_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_hors_region_actuelle_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_hors_region_actuelle_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_hors_region_actuelle_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_etranger\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_etudes_sans_objet_non_inscrit'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_etudes_sans_objet_non_inscrit\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_ILETUDM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('VOIT' as TEXT) as \"champs\",\n      cast(  \n           \"VOIT\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_0_voiture'  , \n        \n            'menages_1_voiture'  , \n        \n            'menages_2_voitures'  , \n        \n            'menages_3_et_plus_voitures' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_0_voiture'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_0_voiture\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_1_voiture'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_1_voiture\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_2_voitures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_2_voitures\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_3_et_plus_voitures'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_3_et_plus_voitures\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_VOIT_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('ILTM' as TEXT) as \"champs\",\n      cast(  \n           \"ILTM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_travail_commune_actuelle'  , \n        \n            'pr_travail_commune_departement_actuel'  , \n        \n            'pr_travail_department_region_actuel'  , \n        \n            'pr_travail_hors_region_actuelle_metropole'  , \n        \n            'pr_travail_hors_region_actuelle_dom'  , \n        \n            'pr_travail_hors_region_actuelle_com'  , \n        \n            'pr_travail_etranger'  , \n        \n            'pr_travail_sans_objet_sans_emploi' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_commune_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_commune_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_commune_departement_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_commune_departement_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_department_region_actuel'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_department_region_actuel\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_hors_region_actuelle_metropole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_hors_region_actuelle_metropole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_hors_region_actuelle_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_hors_region_actuelle_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_hors_region_actuelle_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_hors_region_actuelle_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_etranger\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_travail_sans_objet_sans_emploi'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_travail_sans_objet_sans_emploi\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_ILTM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('TRANSM' as TEXT) as \"champs\",\n      cast(  \n           \"TRANSM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_pr_transport_travail_pieds'  , \n        \n            'menages_pr_transport_travail_velo'  , \n        \n            'menages_pr_transport_travail_deux_roues'  , \n        \n            'menages_pr_transport_travail_voiture'  , \n        \n            'menages_pr_transport_travail_transport_commune' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_pieds'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_pieds\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_velo'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_velo\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_voiture'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_voiture\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_pr_transport_travail_transport_commune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_pr_transport_travail_transport_commune\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_TRANSM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('DEROU' as TEXT) as \"champs\",\n      cast(  \n           \"DEROU\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'dom__aucun_deux_roues'  , \n        \n            'dom__un_deux_roues'  , \n        \n            'dom__deux_deux_roues'  , \n        \n            'dom__trois_ou_plus_deux_roues' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'dom__aucun_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__aucun_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__un_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__un_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__deux_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__deux_deux_roues\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'dom__trois_ou_plus_deux_roues'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"dom__trois_ou_plus_deux_roues\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_DEROU_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n    \n      \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('IRANM' as TEXT) as \"champs\",\n      cast(  \n           \"IRANM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'menages_avec_pr_annee_avant_meme_logement'  , \n        \n            'menages_avec_pr_annee_avant_meme_commune'  , \n        \n            'menages_avec_pr_annee_avant_meme_departement'  , \n        \n            'menages_avec_pr_annee_avant_meme_region'  , \n        \n            'menages_avec_pr_annee_avant_autre_region_metro'  , \n        \n            'menages_avec_pr_annee_avant_autre_region_dom'  , \n        \n            'menages_avec_pr_annee_avant_autre_region_com'  , \n        \n            'menages_avec_pr_annee_avant_union_europeenne'  , \n        \n            'menages_avec_pr_annee_avant_etranger' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_logement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_logement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_commune'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_commune\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_departement'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_departement\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_meme_region'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_meme_region\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_autre_region_metro'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_autre_region_metro\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_autre_region_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_autre_region_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_autre_region_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_autre_region_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_union_europeenne'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_union_europeenne\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'menages_avec_pr_annee_avant_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"menages_avec_pr_annee_avant_etranger\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_IRANM_par_geo\n      USING (code_iris)\n\n    \n\n      LEFT JOIN ( \n\n\n\n\n\n\nwith unpivoted as (\n      \n\n\n-- Prends toutes les colonnes sauf la colonne \u00e0 consid\u00e9rer, pour donne en param\u00e8tre \u00e0 unpivot\n  \n\n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n  \n\n  select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('CATL' as TEXT) as \"champs\",\n      cast(  \n           \"CATL\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    union all\n    select\n        \"poids_du_logement\",\n        \"code_commune_insee\",\n        \"code_iris\",\n\n      cast('INAIM' as TEXT) as \"champs\",\n      cast(  \n           \"INAIM\"\n             \n           as varchar) as \"valeur\"\n\n    from \"defaultdb\".\"intermediaires\".\"mobilite_renomee\"\n\n    \n\n\n\n), \nunpivot_filtree as (\n        \n\n    SELECT\n        code_iris, \n        poids_du_logement,\n        valeur\n    FROM\n        unpivoted\n    WHERE\n        valeur in (\n        \n            'pr_naissance_department_actuelle'  , \n        \n            'pr_naissance_department_region_actuelle'  , \n        \n            'pr_naissance_hors_region_actuelle_metropole'  , \n        \n            'pr_naissance_hors_region_actuelle_dom'  , \n        \n            'pr_naissance_hors_region_actuelle_com'  , \n        \n            'pr_naissance_etranger' \n        )\n\n\n),\npivoted as (\n        \n\n    \n    \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n        \n            \n        \n      \n\n    select \n\n    code_iris,\n    \n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_department_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_department_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_department_region_actuelle'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_department_region_actuelle\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_hors_region_actuelle_metropole'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_hors_region_actuelle_metropole\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_hors_region_actuelle_dom'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_hors_region_actuelle_dom\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_hors_region_actuelle_com'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_hors_region_actuelle_com\"\n      \n    \n    ,\n  \n    sum(\n      \n      case\n      when valeur = 'pr_naissance_etranger'\n        then poids_du_logement\n      else 0\n      end\n    )\n    \n      \n            as \"pr_naissance_etranger\"\n      \n    \n    \n  \n\n    from \n        unpivot_filtree\n    group by\n        code_iris\n\n\n)\n\nselect * from pivoted\n  ) as alias_INAIM_par_geo\n      USING (code_iris)\n\n    \n\n  )\n\nselect * from aggregated\n\n), \naggregated_with_infos_iris as (\n    SELECT\n      *\n    FROM\n      aggregated\n    LEFT JOIN\n\t    \"defaultdb\".\"prepare\".\"infos_iris\" as infos_iris\n    ON\n      aggregated.code_iris = infos_iris.code_iris_2024\n  )\n\nSELECT \n    *  \nFROM\n    aggregated_with_infos_iris", "relation_name": "\"defaultdb\".\"prepare\".\"mobilite_iris\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.636043Z", "completed_at": "2024-10-23T16:57:06.640675Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.641841Z", "completed_at": "2024-10-23T16:57:06.641846Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008080720901489258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_ventes_immobilieres_enrichies_id_mutation.68b671ddc6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_mutation\nfrom \"defaultdb\".\"prepare\".\"ventes_immobilieres_enrichies\"\nwhere id_mutation is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.645304Z", "completed_at": "2024-10-23T16:57:06.649234Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.650364Z", "completed_at": "2024-10-23T16:57:06.650368Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00723576545715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_ventes_immobilieres_enrichies_id_mutation.a22f6704ba", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id_mutation as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"ventes_immobilieres_enrichies\"\nwhere id_mutation is not null\ngroup by id_mutation\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.653776Z", "completed_at": "2024-10-23T16:57:06.657757Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.658885Z", "completed_at": "2024-10-23T16:57:06.658889Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007265567779541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_activite_communes_code_commune_insee.705d4ded03", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_commune_insee\nfrom \"defaultdb\".\"prepare\".\"activite_communes\"\nwhere code_commune_insee is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.662299Z", "completed_at": "2024-10-23T16:57:06.666173Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.667290Z", "completed_at": "2024-10-23T16:57:06.667294Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00726008415222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_activite_communes_code_commune_insee.a16d20ff24", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_commune_insee as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"activite_communes\"\nwhere code_commune_insee is not null\ngroup by code_commune_insee\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.670878Z", "completed_at": "2024-10-23T16:57:06.674749Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.675872Z", "completed_at": "2024-10-23T16:57:06.675876Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0071468353271484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_activite_iris_code_iris.d48378cef2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_iris\nfrom \"defaultdb\".\"prepare\".\"activite_iris\"\nwhere code_iris is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.679280Z", "completed_at": "2024-10-23T16:57:06.684734Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.685909Z", "completed_at": "2024-10-23T16:57:06.685913Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00877237319946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_activite_iris_code_iris.a827b233ce", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_iris as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"activite_iris\"\nwhere code_iris is not null\ngroup by code_iris\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.689328Z", "completed_at": "2024-10-23T16:57:06.693229Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.694361Z", "completed_at": "2024-10-23T16:57:06.694365Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007158994674682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_demographie_communes_code_commune_insee.a06d1c158d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_commune_insee\nfrom \"defaultdb\".\"prepare\".\"demographie_communes\"\nwhere code_commune_insee is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.697777Z", "completed_at": "2024-10-23T16:57:06.701576Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.702713Z", "completed_at": "2024-10-23T16:57:06.702717Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007063150405883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_demographie_communes_code_commune_insee.99a323b9a8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_commune_insee as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"demographie_communes\"\nwhere code_commune_insee is not null\ngroup by code_commune_insee\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.706161Z", "completed_at": "2024-10-23T16:57:06.710181Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.711315Z", "completed_at": "2024-10-23T16:57:06.711320Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007294416427612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_demographie_iris_code_iris.5e934d266a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_iris\nfrom \"defaultdb\".\"prepare\".\"demographie_iris\"\nwhere code_iris is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.714778Z", "completed_at": "2024-10-23T16:57:06.718576Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.719693Z", "completed_at": "2024-10-23T16:57:06.719697Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007070779800415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_demographie_iris_code_iris.6f4a6d41ff", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_iris as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"demographie_iris\"\nwhere code_iris is not null\ngroup by code_iris\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.723123Z", "completed_at": "2024-10-23T16:57:06.727058Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.728184Z", "completed_at": "2024-10-23T16:57:06.728188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00716400146484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_habitat_communes_code_commune_insee.4bfaea56ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_commune_insee\nfrom \"defaultdb\".\"prepare\".\"habitat_communes\"\nwhere code_commune_insee is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.731585Z", "completed_at": "2024-10-23T16:57:06.735373Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.736490Z", "completed_at": "2024-10-23T16:57:06.736495Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007015228271484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_habitat_communes_code_commune_insee.31652939ba", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_commune_insee as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"habitat_communes\"\nwhere code_commune_insee is not null\ngroup by code_commune_insee\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.739875Z", "completed_at": "2024-10-23T16:57:06.743707Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.744820Z", "completed_at": "2024-10-23T16:57:06.744825Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0070536136627197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_habitat_iris_code_iris.f403285d90", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_iris\nfrom \"defaultdb\".\"prepare\".\"habitat_iris\"\nwhere code_iris is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.748213Z", "completed_at": "2024-10-23T16:57:06.752058Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.753203Z", "completed_at": "2024-10-23T16:57:06.753207Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0070648193359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_habitat_iris_code_iris.e938aeede9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_iris as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"habitat_iris\"\nwhere code_iris is not null\ngroup by code_iris\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.756735Z", "completed_at": "2024-10-23T16:57:06.760733Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.761890Z", "completed_at": "2024-10-23T16:57:06.761894Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007231473922729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_mobilite_communes_code_commune_insee.3ff1215dfa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_commune_insee\nfrom \"defaultdb\".\"prepare\".\"mobilite_communes\"\nwhere code_commune_insee is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.765282Z", "completed_at": "2024-10-23T16:57:06.770593Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.771714Z", "completed_at": "2024-10-23T16:57:06.771719Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008525371551513672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_mobilite_communes_code_commune_insee.0bb420935f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_commune_insee as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"mobilite_communes\"\nwhere code_commune_insee is not null\ngroup by code_commune_insee\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.775365Z", "completed_at": "2024-10-23T16:57:06.779228Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.780347Z", "completed_at": "2024-10-23T16:57:06.780352Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007127285003662109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.not_null_mobilite_iris_code_iris.3dccdfc834", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect code_iris\nfrom \"defaultdb\".\"prepare\".\"mobilite_iris\"\nwhere code_iris is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-23T16:57:06.783746Z", "completed_at": "2024-10-23T16:57:06.787568Z"}, {"name": "execute", "started_at": "2024-10-23T16:57:06.788686Z", "completed_at": "2024-10-23T16:57:06.788690Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007081270217895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.unique_mobilite_iris_code_iris.1d6c4aa554", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    code_iris as unique_field,\n    count(*) as n_records\n\nfrom \"defaultdb\".\"prepare\".\"mobilite_iris\"\nwhere code_iris is not null\ngroup by code_iris\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 45.4286150932312, "args": {"vars": {}, "partial_parse_file_diff": true, "write_json": true, "compile": true, "invocation_command": "dbt docs generate", "cache_selected_only": false, "macro_debugging": false, "use_colors": true, "log_format": "default", "enable_legacy_logger": false, "print": true, "strict_mode": false, "use_colors_file": true, "exclude": [], "quiet": false, "profiles_dir": ".", "favor_state": false, "warn_error_options": {"include": [], "exclude": []}, "which": "generate", "indirect_selection": "eager", "log_path": "/home/runner/work/make-open-data/make-open-data/logs", "select": [], "static": false, "static_parser": true, "log_file_max_bytes": 10485760, "partial_parse": true, "version_check": true, "log_level": "info", "defer": false, "log_format_file": "debug", "printer_width": 80, "introspect": true, "log_level_file": "debug", "populate_cache": true, "show_resource_report": false, "project_dir": "/home/runner/work/make-open-data/make-open-data", "empty_catalog": false, "send_anonymous_usage_stats": true}}