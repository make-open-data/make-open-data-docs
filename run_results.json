{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.10", "generated_at": "2024-06-12T15:06:03.781755Z", "invocation_id": "c76289bc-94ae-4b60-a126-a7f8fadd376d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.492123Z", "completed_at": "2024-06-12T15:06:03.498521Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.499786Z", "completed_at": "2024-06-12T15:06:03.499799Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00990915298461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.check_an_agg_for_cp", "compiled": true, "compiled_code": "-- Visualiser les dept et r\u00e9gion pour un CP multi d\u00e9partements\nselect\n    LPAD(CAST(cp.code_postal AS TEXT), 5, '0') as code_postal,\n    cc.\"COM\" as code_commune_insee,\n    cc.\"ARR\" as code_arrondissement,\n    cc.\"DEP\" as code_departement,\n    cc.\"REG\" as code_region\nfrom codes_postaux cp\nleft join codes_geographiques_communes cc on cp.code_commune_insee = cc.\"COM\" and cc.\"TYPECOM\" = 'COM'\nwhere code_postal = '01410'", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.503432Z", "completed_at": "2024-06-12T15:06:03.505291Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.506485Z", "completed_at": "2024-06-12T15:06:03.506492Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052988529205322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.multiple_agg_per_cp", "compiled": true, "compiled_code": "-- Les departements et les r\u00e9gions sont donn\u00e9es par commune\n-- Il existe plusieurs codes postaux pour une commune et plusieurs communes pour un code postal\n-- Il convient de v\u00e9rifier que pour un code postal donn\u00e9, apr\u00e8s fusion avec la table communes,\n-- Il n'y a pas qu'un seul arrondissement, un seul d\u00e9partement et une seule r\u00e9gion\nwith merged_data as (\n    select\n        LPAD(CAST(cp.code_postal AS TEXT), 5, '0') as code_postal,\n        -- cc.\"ARR\" as code_arrondissement,\n        cc.\"DEP\" as code_departement,\n        cc.\"REG\" as code_region\n    from codes_postaux cp\n    inner join codes_geographiques_communes cc on cp.code_commune_insee = cc.\"COM\" and cc.\"TYPECOM\" = 'COM'\n    -- Remplacer par left join \u00e0 l'inclusions des territoire d'outre mer TOM \n    -- Puisque les codes communes ne sont pas renseign\u00e9s pour ces territoires dans codes_geographiques_communes\n    -- La R\u00e9union est une region d'outre, mais pas un territoire d'outre mer, d\u00e8s lors elle est incluse dans les codes_geographiques_communes\n),\n\ncounts as (\n    select \n        code_postal,\n        --count(distinct code_arrondissement) as num_arr,\n        count(distinct code_departement) as num_dep,\n        count(distinct code_region) as num_reg\n    from merged_data\n    group by code_postal\n)\n\nselect *\nfrom counts\nwhere num_dep > 1 or num_reg > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.510024Z", "completed_at": "2024-06-12T15:06:03.511933Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.513129Z", "completed_at": "2024-06-12T15:06:03.513135Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052678585052490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.multiple_com_per_cp", "compiled": true, "compiled_code": "--- Montre les codes postaux qui ont plusieurs codes communes\n\nSELECT code_postal, ARRAY_AGG(DISTINCT code_commune_insee) as communes\nFROM codes_postaux\nGROUP BY code_postal\nHAVING COUNT(DISTINCT code_commune_insee) > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.516652Z", "completed_at": "2024-06-12T15:06:03.518485Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.519700Z", "completed_at": "2024-06-12T15:06:03.519707Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00513148307800293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.makeopendata.multiple_cp_per_com", "compiled": true, "compiled_code": "--- Montre les communes qui ont plusieurs codes postaux\n\nSELECT code_commune_insee, ARRAY_AGG(DISTINCT code_postal) as postal_codes\nFROM codes_postaux\nGROUP BY code_commune_insee\nHAVING COUNT(DISTINCT code_postal) > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.523147Z", "completed_at": "2024-06-12T15:06:03.526136Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.527308Z", "completed_at": "2024-06-12T15:06:03.527314Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006250143051147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.fake_knn_data", "compiled": true, "compiled_code": "-- Pour tester la fonction knn, nous devons cr\u00e9er une table avec des donn\u00e9es fictives \n-- (impossible de faire des tests unitaires sur des donn\u00e9es qui ne sont pas dans une table). \n-- cr\u00e9e une fausse table avec id, latitude, longitude, et valeur columns\n-- S'assurer que le calcul ne se fait pas sur l'objet de la table\n\n\n\nWITH fake_knn_table AS (\n    SELECT 1 AS id, 43.7 AS latitude, 3.832 AS longitude, 100 AS valeur UNION ALL -- (3, 2) --> (200 + 300) / 2 = 250\n    SELECT 3,       43.7,             3.830,              200 UNION ALL -- (1, 2) --> (100 + 300) / 2 = 200\n    SELECT 2,       43.7,             3.831,              300 UNION ALL -- (1, 3) --> (100 + 200) / 2 = 150\n    SELECT 4,       43.7,             3.839,              400 UNION ALL -- (6, 1) --> (500 + 100) / 2 = 300\n    SELECT 6,       43.7,             3.838,              500  -- (4, 1) --> (400 + 100) / 2 = 250\n)\n\n\nselect * from fake_knn_table", "relation_name": "\"make_open_data\".\"prep\".\"fake_knn_data\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.531098Z", "completed_at": "2024-06-12T15:06:03.535351Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.536516Z", "completed_at": "2024-06-12T15:06:03.536523Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007760763168334961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.geo_communes", "compiled": true, "compiled_code": "/*\n    Fournit une tables des communes avec les informations d\u00e9normalis\u00e9es\n*/\n\n\n\nwith filtre_cog_communes as (\n    -- Filter out non-commune rows here to avoid confusion of filtering in the main query\n    select * \n    from \"make_open_data\".\"sources\".\"cog_communes\" as cog_communes     \n    where cog_communes.type = 'commune-actuelle' \n\n),denomalise_cog as (\n    select\n        LPAD(CAST(filtre_cog_communes.code as TEXT), 5, '0') as code_commune,\n        filtre_cog_communes.nom as nom_commune,\n        filtre_cog_communes.arrondissement as code_arrondissement,\n        filtre_cog_communes.departement as code_departement,\n        filtre_cog_communes.region as code_region,\n        LPAD(filtre_cog_communes.\"codesPostaux\"::text, 5, '0') as codes_postaux,\n        filtre_cog_communes.population as population,\n        filtre_cog_communes.zone as code_zone,\n        \n        cog_arrondissements.nom as nom_arrondissement,\n        cog_departements.nom as nom_departement,\n        cog_regions.nom as nom_region\n\n    from filtre_cog_communes\n    left join \"make_open_data\".\"sources\".\"cog_arrondissements\"  cog_arrondissements on cog_arrondissements.code = filtre_cog_communes.arrondissement\n    left join \"make_open_data\".\"sources\".\"cog_departements\"  cog_departements on cog_departements.code = filtre_cog_communes.departement\n    left join \"make_open_data\".\"sources\".\"cog_regions\"  cog_regions on cog_regions.code = filtre_cog_communes.region  \n    \n), geopoints as (\n    select DISTINCT\n        LPAD(CAST(cog_poste.code_commune_insee AS TEXT), 5, '0') as code_commune,\n        CAST(SPLIT_PART(cog_poste._geopoint, ',', 1) AS FLOAT) as commune_latitude,\n        CAST(SPLIT_PART(cog_poste._geopoint, ',', 2) AS FLOAT) as commune_longitude\n    from \"make_open_data\".\"sources\".\"cog_poste\"  as cog_poste\n)\n\nselect\n    denomalise_cog.*,\n    geopoints.commune_latitude,\n    geopoints.commune_longitude\nfrom denomalise_cog\nleft join geopoints on denomalise_cog.code_commune = geopoints.code_commune", "relation_name": "\"make_open_data\".\"prep\".\"geo_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.540153Z", "completed_at": "2024-06-12T15:06:03.543686Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.544851Z", "completed_at": "2024-06-12T15:06:03.544857Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006893157958984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.geo_postaux", "compiled": true, "compiled_code": "/*\n    Merge all data to commune level\n\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith format_cog_poste as (\n    select DISTINCT\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        CASE \n            WHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') for 3) IN ('200', '201') THEN '2A'\n            WHEN SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') for 1) = '2' THEN '2B'\n            ELSE SUBSTRING(LPAD(CAST(code_postal AS TEXT), 5, '0') for 2)\n        END as code_departement\n    from \"make_open_data\".\"sources\".\"cog_poste\" as cog_poste\n),\n\njoin_departements as (\n    select \n        format_cog_poste.*,\n        cog_departements.nom as nom_departement,\n        cog_departements.region as code_region\n    from format_cog_poste\n    left join \"make_open_data\".\"sources\".\"cog_departements\" cog_departements on format_cog_poste.code_departement = cog_departements.code\n),\n\njoin_regions as (\n    select \n        join_departements.*,\n        cog_regions.nom as nom_region\n    from join_departements\n    left join \"make_open_data\".\"sources\".\"cog_regions\" cog_regions on join_departements.code_region = cog_regions.code\n)\n\nselect *\nfrom join_regions", "relation_name": "\"make_open_data\".\"prep\".\"geo_postaux\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.548477Z", "completed_at": "2024-06-12T15:06:03.551424Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.552585Z", "completed_at": "2024-06-12T15:06:03.552592Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006527900695800781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.geo_postaux_communes", "compiled": true, "compiled_code": "--- Un code postal peut appartenir \u00e0 plusieurs communes\n--- Une code commune insee peut appartenir plusieurs codes postaux\n--- On cr\u00e9e une table de passage pour avoir une relation unique entre les codes postaux et les codes communes insee\n\n\n\nwith unique_codes_communes_postaux as (\n    select DISTINCT\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune_insee\n    from \"make_open_data\".\"sources\".\"cog_poste\" as cog_poste\n)\n\nselect *\nfrom unique_codes_communes_postaux", "relation_name": "\"make_open_data\".\"prep\".\"geo_postaux_communes\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.556257Z", "completed_at": "2024-06-12T15:06:03.561899Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.563083Z", "completed_at": "2024-06-12T15:06:03.563088Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008979082107543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.immo_dvf_mutations", "compiled": true, "compiled_code": "-- Filtres nature transaction et nature bien :\n-- Il convient aussi de garder que les vente (explure les VEFA et les \u00e9changes)\n-- Et que les transactions qui concernent au moins un appartement et les maisons\n\n-- Filtres sur les surfaces et trautement des pi\u00e8ces :\n-- Il convient de garder que les transactions qui concernent des biens de plus de 9m2 \n-- Le nombre de pi\u00e8ces est souvent mal renseign\u00e9, il convient de le corriger en fonction de la surface\n\n-- Filtres sur les prix :\n-- Il convient de garder que les transactions dont le prix au metre carr\u00e9 n'est pas 50% de plus que ses 10 plus proches voisins\n\n-- Donn\u00e9es par mutation : \n-- Les donn\u00e9es DVF sont initilement pr\u00e9sent\u00e9es sous forme d'une ligne par mutation (transaction)\n-- Une mutation peut concerner plusieurs biens\n-- Le prix est le prix total de la mutation, il apparait sur les biens concern\u00e9s\n\n\n\nWITH source_dvf AS (\n    select * from \"make_open_data\".\"sources\".\"dvf_2023\" as dvf_2023\n),\nfiltrer_dvf AS (\n    \n    SELECT \n        id_mutation,\n        valeur_fonciere,\n        longitude,\n        latitude,\n        nombre_pieces_principales,\n        surface_reelle_bati,\n        type_local,\n        LPAD(CAST(code_postal AS TEXT), 5, '0') as code_postal,\n        code_commune\n    FROM \n        source_dvf \n     WHERE \n        EXISTS (\n            SELECT 1\n            FROM source_dvf d1\n            WHERE d1.id_mutation = source_dvf.id_mutation AND d1.type_local IN ('Appartement', 'Maison')\n        ) AND\n        NOT EXISTS (\n            SELECT 1\n            FROM source_dvf d2\n            WHERE d2.id_mutation = source_dvf.id_mutation AND d2.nature_mutation != 'Vente'\n        )\n\n),\naggreger_dvf AS (\n    \n    SELECT \n        id_mutation,\n        SUM(CAST(surface_reelle_bati AS numeric)) AS total_surface,\n        SUM(CAST(nombre_pieces_principales AS numeric)) AS total_pieces\n    FROM \n        filtrer_dvf\n    GROUP BY \n        id_mutation\n\n),\nbien_dvf AS (\n    \n    SELECT *\n    FROM (\n        SELECT \n            *,\n            ROW_NUMBER() OVER (\n                PARTITION BY id_mutation\n                ORDER BY \n                    CASE WHEN type_local = 'Maison' THEN 1\n                         WHEN type_local = 'Appartement' THEN 2\n                         ELSE 3\n                    END,\n                    surface_reelle_bati DESC\n            ) AS rang\n        FROM \n            filtrer_dvf\n    ) subquery\n    WHERE\n        rang = 1\n\n)\n\nSELECT \n    bien_dvf.id_mutation,\n    bien_dvf.valeur_fonciere,\n    bien_dvf.longitude,\n    bien_dvf.latitude,\n    aggreger_dvf.total_pieces,\n    aggreger_dvf.total_surface,\n    bien_dvf.type_local,\n    bien_dvf.code_postal,\n    bien_dvf.code_commune\nFROM \n    bien_dvf\nJOIN \n    aggreger_dvf ON aggreger_dvf.id_mutation = bien_dvf.id_mutation", "relation_name": "\"make_open_data\".\"prep\".\"immo_dvf_mutations\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.566535Z", "completed_at": "2024-06-12T15:06:03.567652Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.568795Z", "completed_at": "2024-06-12T15:06:03.568799Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0043926239013671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.makeopendata.logement_2020_codes", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.572440Z", "completed_at": "2024-06-12T15:06:03.575332Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.576464Z", "completed_at": "2024-06-12T15:06:03.576468Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006224155426025391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_arr", "compiled": true, "compiled_code": "-- Test qu'il n'ya pas de doublons dans la table des codes g\u00e9ographiques des arrondissements\n\nWITH counts as (\n    select \n        cog_arrondissements.code,\n        count(*) as num_arr\n    from \"make_open_data\".\"sources\".\"cog_arrondissements\"  as cog_arrondissements \n    group by cog_arrondissements.code\n)\n\nselect *\nfrom counts\nwhere num_arr > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.579933Z", "completed_at": "2024-06-12T15:06:03.583793Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.584907Z", "completed_at": "2024-06-12T15:06:03.584911Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007166862487792969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_com", "compiled": true, "compiled_code": "-- Une commune peut avoir plusieurs types\n-- COM\tCommune / COMA\tCommune associ\u00e9e / COMD\tCommune d\u00e9l\u00e9gu\u00e9e / ARM\tArrondissement municipal\n-- Les COM sont celles existantes, les autres types sont des legacy de fusions ou disparitions de communes\n\nWITH counts as (\n    select \n        cog_communes.code,\n        count(*) as num_com\n    from \"make_open_data\".\"sources\".\"cog_communes\"  as cog_communes\n    where cog_communes.type = 'commune-actuelle'\n    group by cog_communes.code\n)\n\nselect *\nfrom counts\nwhere num_com > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.588327Z", "completed_at": "2024-06-12T15:06:03.590939Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.592090Z", "completed_at": "2024-06-12T15:06:03.592095Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005877256393432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_dep", "compiled": true, "compiled_code": "-- Test qu'il n'ya pas de doublons dans la table des codes g\u00e9ographiques des departements\n\nWITH counts as (\n    select \n        cog_departements.code,\n        count(*) as num_dep\n    from \"make_open_data\".\"sources\".\"cog_departements\" as cog_departements\n    group by cog_departements.code\n)\n\nselect *\nfrom counts\nwhere num_dep > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.595547Z", "completed_at": "2024-06-12T15:06:03.598408Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.599571Z", "completed_at": "2024-06-12T15:06:03.599576Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061588287353515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_gps_com", "compiled": true, "compiled_code": "-- https://www.data.gouv.fr/fr/datasets/base-officielle-des-codes-postaux/\n-- Mention que : contient en plus les coordonn\u00e9es des centro\u00efdes des communes est \u00e9galement disponible.\n-- V\u00e9rifions que les coordonn\u00e9es des centro\u00efdes sont bien uniques pour chaque commune\n\n\n\nwith source as (\n    SELECT code_commune_insee, COUNT(DISTINCT _geopoint) as geopoint_count\n    FROM \"make_open_data\".\"sources\".\"cog_poste\" as cog_poste\n    GROUP BY code_commune_insee\n)\n\nselect *\nfrom source\nwhere geopoint_count > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.602988Z", "completed_at": "2024-06-12T15:06:03.605847Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.606975Z", "completed_at": "2024-06-12T15:06:03.606979Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061533451080322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_price_mutation", "compiled": true, "compiled_code": "-- Dans le fichier source de dvf, les mutations apparaissent sur plusieurs ligne\n-- Il s'agit des transactions multiventes (un appartement dans une ligne et une maison dans une autre)\n-- Il s'agit donc de v\u00e9rifier que chaque mutation, donc dans les lignes o\u00f9 elle apparait, il n'a qu'une seule valeur fonci\u00e8re\n\nWITH mutation_values AS (\n    SELECT \n        id_mutation,\n        code_commune,\n        code_postal,\n        latitude,\n        longitude,\n        valeur_fonciere\n    FROM \n        \"make_open_data\".\"sources\".\"dvf_2023\" as dvf_2023\n),\n\nmutation_value_counts AS (\n    SELECT \n        id_mutation,\n        COUNT(DISTINCT valeur_fonciere) AS distinct_fonciere_count\n    FROM \n        mutation_values\n    GROUP BY \n        id_mutation\n)\n\nSELECT \n    id_mutation,\n    distinct_fonciere_count\nFROM \n    mutation_value_counts\nWHERE \n    distinct_fonciere_count > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.610461Z", "completed_at": "2024-06-12T15:06:03.612951Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.614051Z", "completed_at": "2024-06-12T15:06:03.614056Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005858421325683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_one_reg", "compiled": true, "compiled_code": "-- Test qu'il n'ya pas de doublons dans la table des codes g\u00e9ographiques des r\u00e9gions\n\nWITH counts as (\n    select \n        cog_regions.code,\n        count(*) as num_reg\n    from \"make_open_data\".\"sources\".\"cog_regions\" as cog_regions\n    group by cog_regions.code\n)\n\nselect *\nfrom counts\nwhere num_reg > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.617651Z", "completed_at": "2024-06-12T15:06:03.622831Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.624036Z", "completed_at": "2024-06-12T15:06:03.624040Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008495092391967773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.test_knn", "compiled": true, "compiled_code": "-- Define expected values\nWITH expected AS (\n    SELECT 1 AS id, 250 AS expected_valeur UNION ALL\n    SELECT 3,       200 UNION ALL\n    SELECT 2,       150 UNION ALL\n    SELECT 4,       300 UNION ALL\n    SELECT 6,       250\n),\n\n-- Calculate knn for each row in the fake table\ncomputed AS (\n    \nWITH knn AS (\n    SELECT \n        a.id AS id,\n        AVG(b.valeur) AS mean_knn_value\n    FROM \n        \"make_open_data\".\"prep\".\"fake_knn_data\" a\n        JOIN LATERAL (\n            SELECT valeur\n            FROM \"make_open_data\".\"prep\".\"fake_knn_data\"\n            WHERE id != a.id\n            ORDER BY ST_SetSRID(ST_MakePoint(a.longitude, a.latitude), 4326) <-> ST_SetSRID(ST_MakePoint(longitude, latitude), 4326)\n            LIMIT 2\n        ) b ON TRUE\n    GROUP BY a.id\n)\n\nSELECT \n    a.*,\n    b.mean_knn_value\nFROM \n    \"make_open_data\".\"prep\".\"fake_knn_data\" a\n    JOIN knn b ON a.id = b.id\n\n)\n\n-- Compare computed and expected values\nSELECT \n    computed.id, \n    computed.mean_knn_value AS computed_valeur, \n    expected.expected_valeur\nFROM \n    computed\n    JOIN expected ON computed.id = expected.id\nWHERE\n    computed.mean_knn_value != expected.expected_valeur", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.627507Z", "completed_at": "2024-06-12T15:06:03.630273Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.631424Z", "completed_at": "2024-06-12T15:06:03.631428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006106376647949219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_geo_communes_number", "compiled": true, "compiled_code": "--- Le nombre officiel de communes est de 35029 soit\n--- zone = metro & drom est de 34935 en 2024\n--- i.e. france metropole et departement d'outre mer\n--- https://www.collectivites-locales.gouv.fr/bulletin-dinformation-statistique-bis-de-la-dgcl\n--- PLUS zone = com  est 94 \n--- i.e. collectivit\u00e9 d'outre mer\n\n\n\nwith source as (\n    SELECT COUNT(DISTINCT code_commune) as commune_count\n    FROM \"make_open_data\".\"prep\".\"geo_communes\"\n)\n\nselect *\nfrom source\nwhere commune_count != 35029", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.635079Z", "completed_at": "2024-06-12T15:06:03.637781Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.638891Z", "completed_at": "2024-06-12T15:06:03.638896Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0062444210052490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.asset_geo_communes_distinct", "compiled": true, "compiled_code": "--- V\u00e9rifie que les communes du mod\u00e8le sont distinctes\n\n\n\nwith counts as (\n    SELECT code_commune, COUNT(*) as num_com\n    FROM \"make_open_data\".\"prep\".\"geo_communes\"\n    GROUP BY code_commune\n)\n\nselect *\nfrom counts\nwhere num_com > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.642337Z", "completed_at": "2024-06-12T15:06:03.645234Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.646390Z", "completed_at": "2024-06-12T15:06:03.646395Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061757564544677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.makeopendata.assert_geo_postaux_distinct", "compiled": true, "compiled_code": "--- V\u00e9rifie que les codes postaux du mod\u00e8le sont distincts\n\n\n\nwith counts as (\n    SELECT code_postal, COUNT(*) as num_cp\n    FROM \"make_open_data\".\"prep\".\"geo_postaux\"\n    GROUP BY code_postal\n)\n\nselect *\nfrom counts\nwhere num_cp > 1", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-12T15:06:03.649794Z", "completed_at": "2024-06-12T15:06:03.776408Z"}, {"name": "execute", "started_at": "2024-06-12T15:06:03.777619Z", "completed_at": "2024-06-12T15:06:03.777625Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.13055706024169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.makeopendata.decoder_logement", "compiled": true, "compiled_code": "\n\nWITH logement AS (\n    select * from \"make_open_data\".\"sources\".\"logement_2020\" as logement_2020\n),\ndecode_logement AS (\n    \n  \n  \n\n  \n\n  \n\n  \n\n  SELECT\n    \n      \n      \n      \n      \n            \n      \n        \"INP65M\" as \"personnes_plus_65_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP24M\" as \"personnes_moins_24_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"TPM\"\n          \n            WHEN 'Z' THEN 'Sans objet  sans emploi '\n          \n            WHEN '2' THEN 'Temps partiel'\n          \n            WHEN '1' THEN 'Temps complet'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"temps_travail_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"TACTM\"\n          \n            WHEN '12' THEN 'Ch meurs'\n          \n            WHEN '22' THEN ' l ves'\n          \n            WHEN '11' THEN 'Actifs ayant un emploi'\n          \n            WHEN '24' THEN 'Femmes ou hommes au foyer'\n          \n            WHEN '25' THEN 'Autres inactifs'\n          \n            WHEN '21' THEN 'Retrait s ou pr retrait s'\n          \n            WHEN 'YY' THEN 'Hors r sidence principale'\n          \n        END as \"type_activite_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"CMBL\"\n          \n            WHEN 'Z' THEN 'Logement ordinaire DOM'\n          \n            WHEN '3' THEN 'Fioul  mazout '\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '5' THEN 'Gaz en bouteilles ou en citerne'\n          \n            WHEN '6' THEN 'Autre'\n          \n            WHEN '1' THEN 'Chauffage urbain'\n          \n            WHEN '2' THEN 'Gaz de ville ou de r seau'\n          \n            WHEN '4' THEN ' lectricit '\n          \n        END as \"combustible_principal_logement__metro\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"DIPLM\"\n          \n            WHEN '15' THEN 'Baccalaur at professionnel  brevet professionnel  de technicien ou d enseignement  dipl me  quivalent'\n          \n            WHEN '14' THEN 'Baccalaur at g n ral ou technologique  brevet sup rieur  capacit  en droit  DAEU  ESEU'\n          \n            WHEN '12' THEN 'BEPC  brevet  l mentaire  brevet des coll ges  DNB'\n          \n            WHEN '03' THEN 'Aucun dipl me et scolarit  jusqu   la fin du coll ge ou au del '\n          \n            WHEN '13' THEN 'CAP  BEP ou dipl me de niveau  quivalent'\n          \n            WHEN '01' THEN 'Pas de scolarit  ou arr t avant la fin du primaire'\n          \n            WHEN '19' THEN 'Doctorat de recherche  hors sant  '\n          \n            WHEN 'YY' THEN 'Hors r sidence principale'\n          \n            WHEN '16' THEN 'BTS  DUT  Deug  Deust  dipl me de la sant  ou du social de niveau bac 2  dipl me  quivalent'\n          \n            WHEN '11' THEN 'CEP  certificat d  tudes primaires '\n          \n            WHEN '18' THEN 'Master  DEA  DESS  dipl me grande  cole niveau bac 5  doctorat de sant '\n          \n            WHEN '17' THEN 'Licence  licence pro  ma trise  dipl me  quivalent de niveau bac 3 ou bac 4'\n          \n            WHEN '02' THEN 'Aucun dipl me et scolarit  interrompue   la fin du primaire ou avant la fin du coll ge'\n          \n        END as \"diplome_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"INAIM\"\n          \n            WHEN '2' THEN 'Dans un autre d partement de la r gion de r sidence actuelle'\n          \n            WHEN '1' THEN 'Dans le d partement de r sidence actuelle'\n          \n            WHEN '6' THEN '  l  tranger'\n          \n            WHEN '4' THEN 'Hors de la r gion de r sidence actuelle   dans un DOM'\n          \n            WHEN '5' THEN 'Hors de la r gion de r sidence actuelle   dans un TOM COM'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '3' THEN 'Hors de la r gion de r sidence actuelle   en m tropole'\n          \n        END as \"lieu_naissance_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"SEXEM\"\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '2' THEN 'Femmes'\n          \n            WHEN '1' THEN 'Hommes'\n          \n        END as \"sexe_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INPER2\" as \"personnes_feminin_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP19M\" as \"personnes_moins_19_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"EMPLM\"\n          \n            WHEN '16' THEN 'Emplois sans limite de dur e'\n          \n            WHEN '23' THEN 'Non salari s   Aides familiaux'\n          \n            WHEN '15' THEN 'Autres emplois   dur e limit e'\n          \n            WHEN '11' THEN 'En contrat d apprentissage ou de professionnalisation'\n          \n            WHEN '22' THEN 'Non salari s   Employeurs'\n          \n            WHEN 'YY' THEN 'Hors r sidence principale'\n          \n            WHEN 'ZZ' THEN 'Sans objet  sans emploi '\n          \n            WHEN '13' THEN 'Emplois aid s  contrat unique d insertion'\n          \n            WHEN '14' THEN 'Stagiaires r mun r s en entreprise'\n          \n            WHEN '12' THEN 'Plac s par une agence d int rim'\n          \n            WHEN '21' THEN 'Non salari s   Ind pendants'\n          \n        END as \"condition_empoi_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"ASCEN\"\n          \n            WHEN '1' THEN 'Avec ascenseur'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '2' THEN 'Sans ascenseur'\n          \n        END as \"desserte_ascensseur\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"GARL\"\n          \n            WHEN '1' THEN 'Avec emplacement s  de stationnement'\n          \n            WHEN '2' THEN 'Sans emplacement de stationnement'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"emplacement_stationnement_reserve\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"RECHM\"\n          \n            WHEN '9' THEN 'Non d clar   inactif '\n          \n            WHEN '0' THEN 'Ne recherche pas d emploi'\n          \n            WHEN '1' THEN 'Cherche un emploi depuis moins d un an'\n          \n            WHEN '2' THEN 'Cherche un emploi depuis plus d un an'\n          \n            WHEN 'Z' THEN 'Sans objet  en emploi '\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"anciennete_recherche_emploi_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"TRANSM\"\n          \n            WHEN 'Z' THEN 'Sans objet'\n          \n            WHEN '6' THEN 'Transports en commun'\n          \n            WHEN '5' THEN 'Voiture  camion  fourgonnette'\n          \n            WHEN '3' THEN 'V lo  y compris   assistance  lectrique '\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '2' THEN 'Marche   pied  ou rollers  patinette '\n          \n            WHEN '1' THEN 'Pas de transport'\n          \n            WHEN '4' THEN 'Deux roues motoris '\n          \n        END as \"mode_transport_plus_utilise_travail_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"CHFL\"\n          \n            WHEN '2' THEN 'Chauffage central individuel avec une chaudi re propre au logement'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '4' THEN 'Autre moyen de chauffage'\n          \n            WHEN '3' THEN 'Chauffage tout  lectrique'\n          \n            WHEN 'Z' THEN 'Logement ordinaire DOM'\n          \n            WHEN '1' THEN 'Chauffage central collectif  y compris chauffage urbain '\n          \n        END as \"chauffage_central_logement__metro\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"IPONDL\" as \"poids_du_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INPER1\" as \"personnes_masculin_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"STAT_CONJM\"\n          \n            WHEN '6' THEN 'C libataire'\n          \n            WHEN '4' THEN 'Veuf  veuve'\n          \n            WHEN '5' THEN 'Divorc  e '\n          \n            WHEN '3' THEN 'En concubinage ou union libre'\n          \n            WHEN '2' THEN 'Pacs  e '\n          \n            WHEN '1' THEN 'Mari  e '\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"status_conjugal_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP60M\" as \"personnes_plus_60_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"HLML\"\n          \n            WHEN '1' THEN 'Logement appartenant   un organisme HLM'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '2' THEN 'Logement n appartenant pas   un organisme HLM'\n          \n        END as \"logement_hml\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"EGOUL\"\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '2' THEN 'Raccordement   une fosse septique'\n          \n            WHEN '1' THEN 'Raccordement au r seau d  gouts'\n          \n            WHEN '4' THEN ' vacuation des eaux us es   m me le sol'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN '3' THEN 'Raccordement   un puisard'\n          \n        END as \"mode_evacuation_eaux_usagers__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP75M\" as \"personnes_plus_75_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"ILETUDM\"\n          \n            WHEN 'Z' THEN 'Sans objet  pas d inscription dans un  tablissement d enseignement '\n          \n            WHEN '5' THEN 'Hors de la r gion de r sidence actuelle   dans un DOM'\n          \n            WHEN '4' THEN 'Hors de la r gion de r sidence actuelle   en m tropole'\n          \n            WHEN '2' THEN 'Dans une autre commune du d partement de r sidence'\n          \n            WHEN '6' THEN 'Hors de la r gion de r sidence actuelle   dans une COM'\n          \n            WHEN '3' THEN 'Dans un autre d partement de la r gion de r sidence'\n          \n            WHEN '7' THEN '  l  tranger'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '1' THEN 'Dans la commune de r sidence actuelle'\n          \n        END as \"lieu_etudes_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"CATL\"\n          \n            WHEN '2' THEN 'Logements occasionnels'\n          \n            WHEN '1' THEN 'R sidences principales'\n          \n            WHEN '3' THEN 'R sidences secondaires'\n          \n            WHEN '4' THEN 'Logements vacants'\n          \n        END as \"categorie_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"ANEMR\"\n          \n            WHEN '00' THEN 'Moins de 2 ans'\n          \n            WHEN '06' THEN 'De 40   49 ans'\n          \n            WHEN '03' THEN 'De 10   19 ans'\n          \n            WHEN '01' THEN 'De 2   4 ans'\n          \n            WHEN '07' THEN 'De 50   59 ans'\n          \n            WHEN '04' THEN 'De 20   29 ans'\n          \n            WHEN '08' THEN 'De 60   69 ans'\n          \n            WHEN '05' THEN 'De 30   39 ans'\n          \n            WHEN '99' THEN 'Logement ordinaire inoccup '\n          \n            WHEN '02' THEN 'De 5   9 ans'\n          \n            WHEN '09' THEN '70 ans ou plus'\n          \n        END as \"aciennete_regroupe_ammenagement_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INPER\" as \"personnes_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"AEMMR\"\n          \n            WHEN '7' THEN 'Emm nagement entre 1980 et 1989'\n          \n            WHEN '3' THEN 'Emm nagement entre 1920 et 1939'\n          \n            WHEN '6' THEN 'Emm nagement entre 1970 et 1979'\n          \n            WHEN '5' THEN 'Emm nagement entre 1960 et 1969'\n          \n            WHEN '4' THEN 'Emm nagement entre 1940 et 1959'\n          \n            WHEN '2' THEN 'Emm nagement entre 1900 et 1919'\n          \n            WHEN '9' THEN 'Emm nagement apr s 1999'\n          \n            WHEN '8' THEN 'Emm nagement entre 1990 et 1999'\n          \n            WHEN '0' THEN 'Logement ordinaire inoccup '\n          \n        END as \"annee_regroupe_ammenagement_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"VOIT\"\n          \n            WHEN '2' THEN 'Deux voitures'\n          \n            WHEN '3' THEN 'Trois voitures ou plus'\n          \n            WHEN '1' THEN 'Une seule voiture'\n          \n            WHEN '0' THEN 'Aucune voiture'\n          \n            WHEN 'X' THEN 'Logement ordinaire inoccup '\n          \n        END as \"nombre_voitures_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"COMMUNE\" as \"code_commune_insee\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INPAM\" as \"personnes_actives_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"CHAU\"\n          \n            WHEN '2' THEN 'Absence de moyen de chauffage'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '1' THEN 'Pr sence de moyen de chauffage'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n        END as \"chauffage_logement__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"IMMIM\"\n          \n            WHEN '1' THEN 'Immigr s'\n          \n            WHEN '2' THEN 'Non immigr s'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"situation_immigration_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"SURF\"\n          \n            WHEN '3' THEN 'De 40   moins de 60 m '\n          \n            WHEN '5' THEN 'De 80   moins de 100 m '\n          \n            WHEN '1' THEN 'Moins de 30 m '\n          \n            WHEN '6' THEN 'De 100   moins de 120 m '\n          \n            WHEN '4' THEN 'De 60   moins de 80 m '\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '7' THEN '120 m  ou plus'\n          \n            WHEN '2' THEN 'De 30   moins de 40 m '\n          \n        END as \"superficie_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"EAU\"\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '1' THEN 'Eau froide seulement'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN '3' THEN 'Aucun point d eau   l int rieur du logement'\n          \n            WHEN '2' THEN 'Eau froide et chaude'\n          \n        END as \"eau_potabke_interieur_logement__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"AGEMEN8\"\n          \n            WHEN '80' THEN '80 ans ou plus'\n          \n            WHEN '00' THEN 'Moins de 15 ans'\n          \n            WHEN '15' THEN '15   19 ans'\n          \n            WHEN '40' THEN '40   54 ans'\n          \n            WHEN '55' THEN '55   64 ans'\n          \n            WHEN '25' THEN '25   39 ans'\n          \n            WHEN '65' THEN '65   79 ans'\n          \n            WHEN '20' THEN '20   24 ans'\n          \n            WHEN 'YY' THEN 'Hors r sidence principale'\n          \n        END as \"age_regroupe_pr_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"METRODOM\"\n          \n            WHEN 'D' THEN 'DOM'\n          \n            WHEN 'M' THEN 'France m tropolitaine'\n          \n        END as \"residence_metropole_ou_dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP3M\" as \"personnes_moins_3_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"ELEC\"\n          \n            WHEN '2' THEN 'Sans  lectricit '\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '1' THEN 'Avec  lectricit '\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n        END as \"electricite_logement__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"CLIM\"\n          \n            WHEN '2' THEN 'Sans pi ce climatis e'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN '1' THEN 'Avec pi ce climatis e'\n          \n        END as \"min_une_piece_climatise__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"NBPI\" as \"nombre_pieces_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"BAIN\"\n          \n            WHEN '2' THEN 'Sans baignoire ni douche'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '1' THEN 'Avec baignoire ou douche'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n        END as \"baignoire_ou_douche__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"REGION\"\n          \n            WHEN '84' THEN 'Auvergne Rh ne Alpes'\n          \n            WHEN '04' THEN 'La R union'\n          \n            WHEN '11' THEN ' le de France'\n          \n            WHEN '52' THEN 'Pays de la Loire'\n          \n            WHEN '93' THEN 'Provence Alpes C te d Azur'\n          \n            WHEN '03' THEN 'Guyane'\n          \n            WHEN '94' THEN 'Corse'\n          \n            WHEN '75' THEN 'Nouvelle Aquitaine'\n          \n            WHEN '76' THEN 'Occitanie'\n          \n            WHEN '32' THEN 'Hauts de France'\n          \n            WHEN '27' THEN 'Bourgogne Franche Comt '\n          \n            WHEN '53' THEN 'Bretagne'\n          \n            WHEN '44' THEN 'Grand Est'\n          \n            WHEN '02' THEN 'Martinique'\n          \n            WHEN '24' THEN 'Centre Val de Loire'\n          \n            WHEN '28' THEN 'Normandie'\n          \n            WHEN '01' THEN 'Guadeloupe'\n          \n        END as \"region_residence\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"CHOS\"\n          \n            WHEN '1' THEN 'Pr sence de chauffe eau solaire'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN '2' THEN 'Absence de chauffe eau solaire'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"chauffe_eau_solaire__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INEEM\" as \"personnes_scolarise_plus_14_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP17M\" as \"personnes_moins_17_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"CUIS\"\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN '2' THEN 'Absence de cuisine int rieure avec  vier'\n          \n            WHEN '1' THEN 'Pr sence de cuisine int rieure avec  vier'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"cuisine_interieur_avec_evier__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"STOCD\"\n          \n            WHEN '22' THEN 'Locataire ou sous locataire d un logement lou  vide HLM'\n          \n            WHEN '21' THEN 'Locataire ou sous locataire d un logement lou  vide non HLM'\n          \n            WHEN '00' THEN 'Logement ordinaire inoccup '\n          \n            WHEN '30' THEN 'Log  gratuitement'\n          \n            WHEN '23' THEN 'Locataire ou sous locataire d un logement lou  meubl  ou d une chambre d h tel'\n          \n            WHEN '10' THEN 'Propri taire'\n          \n        END as \"status_occupation_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"SANI\"\n          \n            WHEN '0' THEN 'Ni baignoire'\n          \n            WHEN '1' THEN 'Baignoire ou douche hors pi ce r serv e'\n          \n            WHEN 'Z' THEN 'Logement ordinaire DOM'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '2' THEN 'Salle s  de bains  avec douche ou baignoire '\n          \n        END as \"installation_sanitaires__metro\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"DEROU\"\n          \n            WHEN '3' THEN 'Trois deux roues   moteur ou plus'\n          \n            WHEN 'X' THEN 'Logement ordinaire inoccup   DOM '\n          \n            WHEN '2' THEN 'Deux deux roues   moteur'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN '0' THEN 'Aucun deux roues   moteur'\n          \n            WHEN '1' THEN 'Un seul deux roues   moteur'\n          \n        END as \"nombre_deux_roues_menage__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"BATI\"\n          \n            WHEN '2' THEN 'Cases traditionnelles'\n          \n            WHEN '1' THEN 'Habitations de fortune'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN '4' THEN 'Maisons ou immeubles en dur'\n          \n            WHEN '3' THEN 'Maisons ou immeubles en bois'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"aspect_bati__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP5M\" as \"personnes_moins_5_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"SANIDOM\"\n          \n            WHEN 'ZZ' THEN 'Logement ordinaire France m tropolitaine'\n          \n            WHEN 'YY' THEN 'Hors r sidence principale'\n          \n            WHEN '11' THEN 'Avec baignoire ou douche et avec WC   l int rieur'\n          \n            WHEN '21' THEN 'Sans baignoire ni douche mais avec WC   l int rieur'\n          \n            WHEN '22' THEN 'Sans baignoire ni douche'\n          \n            WHEN '12' THEN 'Avec baignoire ou douche mais sans WC   l int rieur'\n          \n        END as \"installation_sanitaires__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP15M\" as \"personnes_moins_15_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"WC\"\n          \n            WHEN '2' THEN 'Sans W  C    l int rieur du logement'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '1' THEN 'Avec W  C    l int rieur du logement'\n          \n            WHEN 'Z' THEN 'Logement ordinaire France m tropolitaine'\n          \n        END as \"presence_wc_interieur_logement__dom\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INP11M\" as \"personnes_moins_11_ans_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INPOM\" as \"personnes_actives_ayant_emploi_menage\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"TYPC\"\n          \n            WHEN '5' THEN 'Construction provisoire'\n          \n            WHEN '2' THEN 'B timent d habitation d un seul logement jumel  ou group  de toute autre fa on'\n          \n            WHEN '3' THEN 'B timent d habitation de 2 logements ou plus'\n          \n            WHEN '1' THEN 'B timent d habitation d un seul logement isol '\n          \n            WHEN '4' THEN 'B timent   usage autre qu habitation'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n        END as \"type_construction\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"ILTM\"\n          \n            WHEN '6' THEN 'Hors de la r gion de r sidence actuelle   dans une COM'\n          \n            WHEN '7' THEN '  l  tranger'\n          \n            WHEN '2' THEN 'Dans une autre commune du d partement de r sidence'\n          \n            WHEN 'Z' THEN 'Sans objet  sans emploi '\n          \n            WHEN '5' THEN 'Hors de la r gion de r sidence actuelle   dans un DOM'\n          \n            WHEN '4' THEN 'Hors de la r gion de r sidence actuelle   en m tropole'\n          \n            WHEN '1' THEN 'Dans la commune de r sidence actuelle'\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '3' THEN 'Dans un autre d partement de la r gion de r sidence'\n          \n        END as \"lieu_travail_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"IRANM\"\n          \n            WHEN 'Y' THEN 'Hors r sidence principale'\n          \n            WHEN '4' THEN 'Dans un autre d partement de la r gion'\n          \n            WHEN '3' THEN 'Dans une autre commune du d partement'\n          \n            WHEN '7' THEN 'Hors de la r gion de r sidence actuelle   dans un TOM COM'\n          \n            WHEN '2' THEN 'Dans un autre logement de la m me commune'\n          \n            WHEN '9' THEN '  l  tranger hors Union Europ enne'\n          \n            WHEN '6' THEN 'Hors de la r gion de r sidence actuelle   dans un DOM'\n          \n            WHEN '8' THEN '  l  tranger dans l Union Europ enne  28 pays membres '\n          \n            WHEN '1' THEN 'Dans le m me logement'\n          \n            WHEN '5' THEN 'Hors de la r gion de r sidence actuelle   en m tropole'\n          \n        END as \"residence_annee_avant_pr\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"ACHL\"\n          \n            WHEN 'B11' THEN 'De 1946   1970'\n          \n            WHEN 'B12' THEN 'De 1971   1990'\n          \n            WHEN 'C117' THEN 'En 2017'\n          \n            WHEN 'C2022' THEN 'En 2022 partiel '\n          \n            WHEN 'C100' THEN 'De 1991   2005'\n          \n            WHEN 'C2020' THEN 'En 2020  partiel '\n          \n            WHEN 'C115' THEN 'En 2015'\n          \n            WHEN 'C114' THEN 'En 2014'\n          \n            WHEN 'C109' THEN 'En 2009'\n          \n            WHEN 'C111' THEN 'En 2011'\n          \n            WHEN 'C110' THEN 'En 2010'\n          \n            WHEN 'C2018' THEN 'En 2018  partiel '\n          \n            WHEN 'C116' THEN 'En 2016'\n          \n            WHEN 'C112' THEN 'En 2012'\n          \n            WHEN 'C2021' THEN 'En 2021 partiel '\n          \n            WHEN 'A11' THEN 'Avant 1919'\n          \n            WHEN 'C107' THEN 'En 2007'\n          \n            WHEN 'A12' THEN 'De 1919   1945'\n          \n            WHEN 'C108' THEN 'En 2008'\n          \n            WHEN 'C2019' THEN 'En 2019  partiel '\n          \n            WHEN 'C113' THEN 'En 2013'\n          \n            WHEN 'C106' THEN 'En 2006'\n          \n        END as \"achevement_construction_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        CASE \"TYPL\"\n          \n            WHEN '6' THEN 'Pi ce ind pendante  ayant sa propre entr e '\n          \n            WHEN '1' THEN 'Maison'\n          \n            WHEN '2' THEN 'Appartement'\n          \n            WHEN '5' THEN 'Habitation de fortune'\n          \n            WHEN '4' THEN 'Chambre d h tel'\n          \n            WHEN '3' THEN 'Logement foyer'\n          \n        END as \"type_logement\"\n      \n      \n      \n      , \n    \n      \n      \n      \n      \n            \n      \n        \"INPSM\" as \"personnes_scolarisees_menage\"\n      \n      \n      \n      \n    \n  FROM logement\n\n)\n\n\nSELECT \n    *\nFROM \n    decode_logement", "relation_name": "\"make_open_data\".\"prep\".\"decoder_logement\""}], "elapsed_time": 0.34342527389526367, "args": {"invocation_command": "dbt docs generate", "use_colors": true, "enable_legacy_logger": false, "vars": {}, "compile": true, "macro_debugging": false, "log_format_file": "debug", "which": "generate", "log_format": "default", "show_resource_report": false, "write_json": true, "partial_parse_file_diff": true, "profiles_dir": ".", "quiet": false, "warn_error_options": {"include": [], "exclude": []}, "static_parser": true, "favor_state": false, "print": true, "project_dir": "/home/runner/work/make-open-data/make-open-data", "indirect_selection": "eager", "log_file_max_bytes": 10485760, "send_anonymous_usage_stats": true, "populate_cache": true, "log_path": "/home/runner/work/make-open-data/make-open-data/logs", "log_level": "info", "partial_parse": true, "log_level_file": "debug", "introspect": true, "strict_mode": false, "empty_catalog": false, "cache_selected_only": false, "use_colors_file": true, "static": false, "exclude": [], "select": [], "version_check": true, "defer": false, "printer_width": 80}}